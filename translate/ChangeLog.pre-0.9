2006-01-17 15:41  davidfraser

	* storage/test_zipfile.py: added tests for zipfile module to make
	  sure it supports required functionality for xpi module
	  (refactored from previous non-py.test version)

2006-01-17 09:53  davidfraser

	* filters/test_pofilter.py: added ability to pass cmdlineoptions to
	  pofilter cmdlineparser

2006-01-17 09:31  davidfraser

	* CREDITS: added nicolas

2006-01-17 09:11  davidfraser

	* __version__.py: version 0.8 (at last!)

2006-01-17 09:06  davidfraser

	* storage/: ts.py, xliff.py: commented out modifications to minidom
	  classes

2006-01-08 17:48  dwaynebailey

	* convert/test_prop2po.py: More tab at the end tests for prop2po

2006-01-08 14:46  dwaynebailey

	* filters/test_checks.py: Fix many of the escape tests using raw
	  wtrings Add another accelerator test for accelerators combined
	  with variables on Mozilla Fix KDE comment tests More unchanged
	  tests to cover KDE comments, numbers, accelerators Add validchars
	  tests

2006-01-08 14:29  dwaynebailey

	* filters/checks.py: Must remove KDE comments when checking for
	  unchnaged entries.

2006-01-08 14:26  dwaynebailey

	* filters/TODO: musttranslate and notranslate implement the stop
	  words functionality.

2005-12-23 16:46  dwaynebailey

	* filters/: checks.py, test_checks.py: Make singlequoting remove
	  KDE comments before testing Add test to check that KDE comments
	  are ignored.

	  Add fuller coverage for "escapes" unit tests.

	  Add commented out tests for "simplcaps" and "spellcheck" as these
	  are the only remaining tests that we need to check here.
	  "isfuzzy" and "isreview" should be tested in test_pofilter.py

2005-12-23 16:21  dwaynebailey

	* filters/test_checks.py: Add a unit test for pofilter "escapes"
	  test.

	  Add another test for "singlequotes" to check quotes at end of
	  sentences.

2005-12-23 16:17  dwaynebailey

	* filters/test_pofilter.py: Test to check variables spanning lines.

2005-12-23 15:48  dwaynebailey

	* convert/: prop2po.py, test_prop2po.py: Only strip spaces, not all
	  whitespace.  Thus we leave \t (tabs) that occur at the end of a
	  .properties entry.

	  Also updated the test to focus on the \t at the end (removed all
	  other Unicode bumf)

2005-12-23 15:24  dwaynebailey

	* convert/test_prop2po.py: Add a unit test harness for prop2po
	  based on the tests for dtd2po.

	  This includes a test for Bug 74.

2005-12-23 15:11  davidfraser

	* filters/test_pofilter.py: actually pass a fake argument to the
	  parser so it doesn't use sys.argv and thinks it has something to
	  handle

2005-12-23 15:10  davidfraser

	* filters/: pofilter.py, test_pofilter.py: added a way of testing
	  pofilter by giving it actual poentries and passing them through
	  the standard chain this slightly bypasses command line argument
	  handling etc; refactored a helper to return a command line parser
	  for this purpose

2005-12-23 14:56  davidfraser

	* convert/convert.py: avoid potential errors caused by default
	  arguments getting set as member variables and modified

2005-12-23 14:53  davidfraser

	* filters/: checks.py, pofilter.py: avoid potential errors caused
	  by default arguments getting set as member variables and modified

2005-12-23 14:52  davidfraser

	* filters/test_checks.py: this check was passing incorrectly
	  because of mozilla variables leaking into the standard checker
	  check properly now that that was fixed - should fail if &amp; is
	  not a variable and pass if it is

2005-12-23 14:43  friedelwolff

	* filters/test_checks.py: Uncomment failing bracket test

2005-12-23 14:41  davidfraser

	* filters/checks.py: map strings to unicode before checking valid
	  characters

2005-12-23 14:40  dwaynebailey

	* filters/test_checks.py: Add a unit test for pofilter
	  "singlequoting" check.

2005-12-23 14:38  davidfraser

	* filters/test_checks.py: added test for config objects not being
	  muddly (which they were until a recent fix)

2005-12-23 14:35  davidfraser

	* filters/checks.py: default [] arguments are a no-no - they can
	  get altered if they are stored in the object, and cause muddly
	  issues

2005-12-23 14:31  dwaynebailey

	* filters/test_checks.py: Add tests to the "accelerator" unit test
	  that covers the various types of accelerator keys.

2005-12-23 14:24  dwaynebailey

	* filters/test_checks.py: Add unit tests for pofilter "variables"
	  check.  They are broken down into each defined checker type: KDE,
	  GNOME, etc

2005-12-23 14:20  davidfraser

	* README: we're going to get the docs from the wiki, and we've
	  relicensed them under GPL (see bug 33)

2005-12-23 14:05  dwaynebailey

	* filters/test_checks.py: Added unit test for pofilter
	  "setencecount" check.

2005-12-23 13:58  dwaynebailey

	* filters/test_checks.py: Add unit test for pofilter "endpunc"
	  check.

2005-12-23 13:52  dwaynebailey

	* filters/test_checks.py: Add unit test for pofilter "startpunc"
	  check.

2005-12-23 13:49  dwaynebailey

	* filters/test_checks.py: Added unit test for pofilter
	  "startwhitespace" check.

2005-12-23 13:42  dwaynebailey

	* filters/test_checks.py: Added "endwhitespace" test

2005-12-23 13:36  dwaynebailey

	* filters/test_checks.py: Added validchars test: this needs some
	  fixing from Dave for the internal workings of validchars.

2005-12-23 12:43  dwaynebailey

	* filters/test_checks.py: Put numbers test in alphabetic order

	  Add a test for "purepunc"

2005-12-23 12:39  dwaynebailey

	* filters/test_checks.py: Add a test for the kdecomments test

2005-12-23 12:35  dwaynebailey

	* filters/test_checks.py: Add a test for pofilter "long" test

2005-12-23 12:32  dwaynebailey

	* filters/test_checks.py: Reorder tests into alphabetic order - we
	  have 34 so order is important.

	  Added a short test.

2005-12-23 12:31  friedelwolff

	* tools/porestructure.py: Don't use templates

2005-12-23 12:23  dwaynebailey

	* filters/test_checks.py: Add tests for pofilter numbers test.

2005-12-23 12:05  dwaynebailey

	* filters/test_checks.py: Make test names follow the pofilter
	  names, to ease finding associated tests.

2005-12-23 12:02  dwaynebailey

	* filters/test_checks.py: Change test_compendiumconflicts to use a
	  raw string in the assert, to make things clearer.

2005-12-23 11:59  dwaynebailey

	* filters/test_checks.py: Add test for doublespacing

2005-12-23 11:31  davidfraser

	* convert/test_oo2po.py: used raw strings so escapes are less
	  confusing added a test of escape conversions (bug 24)

2005-12-23 11:24  friedelwolff

	* filters/helpers.py: Clarify comment

2005-12-23 11:23  friedelwolff

	* filters/test_checks.py: More unit tests for standard checks

2005-12-23 11:22  davidfraser

	* storage/: test_dtd.py, test_po.py: simplified by using str
	  directly now that its that easy

2005-12-23 11:19  davidfraser

	* convert/csv2po.py, convert/dtd2po.py, convert/html2po.py,
	  convert/nb2po.py, convert/oo2po.py, convert/po2csv.py,
	  convert/po2dtd.py, convert/po2oo.py, convert/poreplace.py,
	  convert/pot2po.py, convert/prop2po.py, convert/sxw2po.py,
	  convert/test_dtd2po.py, convert/test_po2dtd.py, convert/ts2po.py,
	  convert/txt2po.py, convert/xliff2po.py, filters/pofilter.py,
	  storage/csvl10n.py, storage/dtd.py, storage/oo.py, storage/po.py,
	  storage/properties.py, storage/test_dtd.py, storage/test_po.py,
	  tools/poconflicts.py, tools/podebug.py, tools/pogrep.py,
	  tools/pomerge.py, tools/porestructure.py: replaced all tolines
	  functions with __str__ functions that return a string rather than
	  a list of lines note that we could use __unicode__ if desired as
	  well

2005-12-23 11:03  dwaynebailey

	* convert/: dtd2po.py, test_dtd2po.py: Fix for Bug #79

	  Removes starting whitespace in subsequent lines of a DTD entity.
	  Thus the PO entry has these uneeded spaces removed.

	  Ie:

	  <!ENTITY blah "Some text		  and more"

	  Becomes

	  msgid "Some text \nand more" msgstr ""

	  Conversion back does not create a pretty formatted entity and
	  won't do that.

	  This fix does not solve the CRLF at the end of such multiline
	  entities. See Bug 86 for the line ending problem.

2005-12-23 10:39  davidfraser

	* convert/oo2po.py, convert/po2oo.py, convert/prop2mozfunny.py,
	  convert/test_oo2po.py, storage/csvl10n.py, storage/dtd.py,
	  storage/oo.py, storage/po.py, storage/properties.py,
	  tools/pocount.py, tools/pomerge.py: replaced all fromlines
	  functions with parse functions that take strings (or sometimes
	  file objects) instead of lists of lines the underlying functions
	  still often split things up into lines in some cases there was an
	  existing parse function that called fromlines, so these have been
	  merged also the dtd element parsing broke on empty strings with
	  thinking it had a line, so this was fixed added an input argument
	  to oofile so that it can be constructed more easily renamed
	  methods in storage/oo.py oomultifile (getlines -> getsubfilesrc,
	  getsubfile -> getsubfilename) added a simple test for oo2po

2005-12-23 10:29  friedelwolff

	* tools/: porestructure, porestructure.py: Tool to restructure po
	  files according to poconflicts directives

2005-12-20 11:59  davidfraser

	* convert/po2csv.py: need a default value for columnorder so we can
	  call convertfile with just the pofile argument (for Pootle)

2005-12-13 16:54  davidfraser

	* storage/test_po.py: must make sure we don't add msgid_comments to
	  blanks when keeping them

2005-12-13 16:53  davidfraser

	* storage/po.py: Always add msgid_comment to blank entries unless
	  "keep"ing them.  This is already done for msgid_comment and
	  msgid_comment_all so the one needing change is merge

2005-12-13 16:47  davidfraser

	* storage/test_po.py: added tests for merging duplicates, and
	  particularly ensure that merging blanks with "merge" adds
	  msgid_comments see bug 15 for an explanation

2005-12-08 14:59  friedelwolff

	* tools/pydiff.py: Support stdin. Check arguments more carefully.

2005-12-08 12:49  davidfraser

	* storage/po.py: allow duplicate handling of blank msg ids, but
	  exclude the header

2005-12-08 12:17  davidfraser

	* misc/test_zipfileext.py: only use TestFailed if test.test_support
	  is present (requires python-devel on Fedora)

2005-12-08 10:01  davidfraser

	* storage/xpi.py: support seamonkey containing os-specific jars by
	  not letting them get matched as lang-reg and disrupt the locale
	  detection

2005-12-06 16:08  davidfraser

	* CREDITS: Friedel Wolff has been doing bug fixing

2005-12-06 15:57  friedelwolff

	* tools/poconflicts.py: Complain if no ouput options are found

2005-11-30 23:11  dwaynebailey

	* filters/test_checks.py: Unit test for pofilter "doublewords"
	  test. Disable one for testing double variables as I'm unsure of
	  how to prefilter variables.

2005-11-30 22:55  dwaynebailey

	* filters/test_checks.py: Unit test for pofilter "filepaths" test

2005-11-30 22:49  dwaynebailey

	* filters/test_checks.py: Unit tests for pofilter "untranslated"

2005-11-30 22:42  dwaynebailey

	* filters/test_checks.py: Unit test for pofilter blank test

2005-11-30 22:37  dwaynebailey

	* filters/test_checks.py: Test for conpedium conflicts

2005-11-30 22:30  dwaynebailey

	* filters/test_checks.py: Add validation checks for acronyms

2005-11-30 22:24  dwaynebailey

	* filters/test_checks.py: Also check that we can detect accelrators
	  that are using Unicode characters in the translation.

2005-11-30 22:18  dwaynebailey

	* filters/test_checks.py: Add test for pofilters accelerators test

2005-11-30 22:06  dwaynebailey

	* filters/test_checks.py: Add test pofilter unchanged test.

2005-11-30 21:26  dwaynebailey

	* filters/test_checks.py: Add startcap tests

2005-11-29 20:55  dwaynebailey

	* convert/convert.py: For --duplicates make merge the default
	  behaviour.  This is the same and normal Gettext behaviour.  This
	  change should make it more understandable for the general user
	  and still make it possible for the advanced user to manipulate
	  their PO files.

2005-11-29 15:52  davidfraser

	* convert/po2xliff.py: convert getElementsByTagName results to list
	  in case it returns a generator (bug 78)

2005-11-29 15:09  davidfraser

	* storage/test_dtd.py: forgot that trailing \n again

2005-11-29 15:06  davidfraser

	* storage/dtd.py: adding the \n to the comment broke stripping the
	  comment from the line with the result that if it had a trailing
	  space, it came out as an unparsed line, and so was repeated (bug
	  77) doing the add after the stripping makes it work
	  (test_commentclosing)

2005-11-29 15:00  davidfraser

	* storage/test_dtd.py: test that if comments have trailing spaces
	  they aren't duplicated

2005-11-29 14:13  davidfraser

	* storage/po.py: if the msgid and msgstr are blank, but there is a
	  source comment, this is still an important piece of a po file
	  (bug 15)

2005-11-29 14:09  davidfraser

	* storage/: test_po.py, po.py: added a test for combining msgid
	  comments, and actually do it when reproducing the source

2005-11-29 13:49  davidfraser

	* storage/test_po.py: added simple start to tests for po module

2005-11-29 13:44  davidfraser

	* convert/test_po2dtd.py: added test for retaining hash prefix (bug
	  81)

2005-11-29 13:38  davidfraser

	* storage/: dtd.py, test_dtd.py: added a hack to handle
	  "hashprefix" in dtd, and fixed up the slight format problem in
	  the test

2005-11-29 13:29  davidfraser

	* storage/test_dtd.py: added test for hashcomment from bug 81

2005-11-28 17:20  davidfraser

	* storage/test_dtd.py: fixed simpleentity comment, added helper for
	  regenerating source and test on simple string

2005-11-28 17:12  davidfraser

	* storage/test_dtd.py: added initial simple dtd test

2005-11-28 15:19  dwaynebailey

	* filters/checks.py: Fix situation when jToolkit is not installed.

2005-11-19 08:33  davidfraser

	* CREDITS: some fixes from Matt Chisholm and Ognyan Kulev, testing
	  by David Farning ; might have missed a few people out, so need to
	  review

2005-11-19 08:27  davidfraser

	* __version__.py: version 0.8rc5

2005-11-14 17:41  davidfraser

	* convert/test_dtd2po.py: actually we do want to convert the
	  apostrophe in the po file

2005-11-14 17:41  davidfraser

	* convert/dtd2po.py, storage/dtd.py: crazy to replace &apos; with
	  single quote here as the defpart is still quoted so it will
	  always break the quoting do it rather in dtd2po, then the
	  back-conversion in po2dtd also still works this fixes bug 69

2005-11-14 17:27  davidfraser

	* convert/test_dtd2po.py: added test for apostrophe breaking
	  single-quoted entity definition moved bug numbers to end of doc
	  strings

2005-11-14 16:55  davidfraser

	* convert/test_dtd2po.py: added test for kde comments being merged
	  properly (bug 65)

2005-11-14 16:32  davidfraser

	* convert/test_dtd2po.py: updated test_entityname to
	  test_donttranslate_label and explained current state a bit better

2005-11-14 16:12  davidfraser

	* convert/test_dtd2po.py: added helper to return single element
	  from pofile added doc strings to tests added test for bug 30

2005-11-14 16:11  davidfraser

	* convert/dtd2po.py: replaced visiblecomments with othercomments as
	  that's the correct name in pofile for #  comments

2005-11-14 15:59  davidfraser

	* convert/po2dtd.py: warn if accesskey is not found

2005-11-14 15:58  davidfraser

	* convert/test_po2dtd.py: reset warnings properly using
	  setup_method and teardown_method so tests don't interact badly
	  added test to make sure missing access key raises an error (bug
	  44)

2005-11-14 15:49  davidfraser

	* convert/po2dtd.py: generate warnings rather than writing straight
	  to sys.stderr don't use sy.argv[-1] for filename as this is
	  almost invariably wrong

2005-11-14 15:49  davidfraser

	* convert/test_po2dtd.py: added proper test that invalid ampersands
	  generate warnings, renamed fix test

2005-11-14 15:26  davidfraser

	* convert/po2dtd.py: check for invalid ampersands on straight
	  po2dtd conversions fixed the ampersand correction position as it
	  was keeping the ampersand and removing the next character!

2005-11-14 15:25  davidfraser

	* convert/test_po2dtd.py: added test for ampersands being stripped
	  out (doesn't detect warning as it says yet) added a helper to do
	  dtd merging (not used yet)

2005-11-14 15:10  davidfraser

	* storage/dtd.py: don't assume that self.entitytype will always be
	  set

2005-11-14 15:09  davidfraser

	* convert/test_po2dtd.py: test that \n in msgstr is escaped
	  correctly in dtd - bug 45

2005-11-14 15:03  davidfraser

	* storage/po.py: Convert nplurals if its unicode too...  This was
	  bug 36 (Patch from Matt Chisholm)

2005-11-14 14:43  davidfraser

	* convert/po2dtd.py: replaced quote functions etc with
	  unquotefrompo make sure newlines aren't included (bug 16)

2005-11-14 14:34  davidfraser

	* convert/test_po2dtd.py: added test for bug 16 in test_po2dtd

2005-11-14 14:25  davidfraser

	* convert/dtd2po.py: move convertmixedelement below convertelement,
	  which makes more sense removed a few blank lines

2005-11-14 14:24  davidfraser

	* convert/test_dtd2po.py: check that the output actually contains
	  credit.translation (otherwise it could be an empty string, the
	  current situation) see
	  http://bugs.wordforge.org/show_bug.cgi?id=15

2005-11-14 14:16  davidfraser

	* convert/test_dtd2po.py: added py.test file for dtd2po

2005-11-14 14:06  davidfraser

	* misc/test_zipfileext.py: added py.test tests for zipfileext that
	  fixes problems in ZipFile

2005-11-14 13:59  davidfraser

	* filters/: checks.py, test_checks.py: added helper functions
	  passes and fails to checks, and use them from within test_checks
	  this is neccessary now that a failure can raise a FilterFailure
	  exception

2005-11-14 13:16  davidfraser

	* convert/convert.py: only do a replace if both the searchstring
	  and replacestring are not None

2005-11-03 15:06  davidfraser

	* __version__.py: rc4, this is really a release candidate now :-)

2005-11-03 14:58  davidfraser

	* convert/po2oo.py: this causes horrible problems for hristo and
	  javier (printing out a unicode string) so trying a relatively
	  verbose but hopefully safe alternative

2005-11-02 11:33  davidfraser

	* convert/dtd2po.py: added a scheme to make sure that if the
	  original strings didn't get mixed for an entity, the translated
	  strings won't be mixed either

2005-11-02 11:27  davidfraser

	* convert/po2moz.py: added --clonexpi option, which allows you to
	  use a different xpi for the structure from the template xpi this
	  is useful when recreating xpis but still wanting to use the en-US
	  xpi for the original strings disabled copying from the template -
	  all files should be unpacked into the input directory by moz2po
	  anyway, and this ends up confusing things if the template xpi and
	  the input xpi from moz2po had a different structure

2005-11-02 11:20  davidfraser

	* storage/xpi.py: when cloning an xpi, if it is created in "w"
	  mode, we should reopen it in "a" mode (or we just recreate a
	  blank file) added TODO to check language replacement code

2005-11-02 09:26  dwaynebailey

	* tools/poconflicts.py: poconflicts now adds a comment:

	  # (poconflicts) path/to/file.po

	  To each conflicting entry.  This so that we can merge the
	  corrected conflicts back into the original PO files.

2005-10-31 17:47  davidfraser

	* storage/xpi.py: support passing locale and region to the XpiFile
	  constructor actually pass them when cloning, since we are given
	  them here

2005-10-31 17:25  davidfraser

	* misc/quote.py: handle unicode in properties files (in utf-8) fix
	  to the way mozilla actually handles unicode escapes \u or \u, up
	  to four hexadecimal characters

2005-10-31 17:20  davidfraser

	* convert/dtd2po.py: fix logic for handling empty dtd elements
	  (empty string, but valid entity name)

2005-10-31 12:24  davidfraser

	* misc/: optrecurse.py, progressbar.py: added support for a new
	  progress option, --progress=names this just prints out filenames
	  without any other progress indicator it's a good option when
	  outputting to a log file rather than a terminal

2005-10-31 12:00  davidfraser

	* storage/xpi.py: another fix to handle locales without regions
	  also make suer the locale and region match the whole string, not
	  just the start produce more errors if we cannot determine locale,
	  don't use uncertain region

2005-10-28 17:00  davidfraser

	* convert/: convert.py, moz2po.py, po2moz.py: added a Replacer
	  object that you can give a search and replace to and then use its
	  searchreplaceinput / searchreplacetemplate methods as converter
	  objects this is basically so we can substitute in variables for
	  the locale and change it automatically we then use this from
	  moz2po / po2moz to prevent users having to edit .js, .manifest
	  and .rdf files also use loops to define the format converters now
	  that they are so prolific we have a hack on po2moz that updates
	  the single replacer object with the locale later on as it is only
	  known later

2005-10-28 16:56  davidfraser

	* storage/xpi.py: handle converting the
	  bin/chrome/lang-reg.manifest mapping back if the locale has not
	  been discovered (just find the first thing that seems to match)
	  this is basically for running xpi standalone to extract the files

2005-10-28 16:28  davidfraser

	* storage/xpi.py: added a special hook to rename
	  bin/chrome/en-US.manifest (or locale) to lang-reg.manifest (both
	  ways)

2005-10-28 15:04  davidfraser

	* convert/po2dtd.py: handle merging with .title as well as .label
	  made list of possible labelsuffixes and accesskeysuffixes to
	  ensure it is extensible and logical

2005-10-28 14:57  davidfraser

	* convert/po2moz.py: handle locales that are just lang without the
	  -region

2005-10-28 14:55  davidfraser

	* convert/dtd2po.py: handle merging with .title as well as .label
	  made list of possible labelsuffixes and accesskeysuffixes to
	  ensure it is extensible and logical

2005-10-28 12:36  davidfraser

	* storage/xpi.py: handle blank regions (which is now expected to be
	  more common in ff 1.5 cvs etc) including a fix for an incorrect
	  variable name...

2005-10-28 12:03  davidfraser

	* storage/dtd.py: handle lines that we don't otherwise parse
	  (non-entity, non-comment lines) this is neccessary for handling
	  the %realBrandDTD; lines that happen with parameterized entries
	  we just pass them straight through.  if such a line occurs after
	  the last entity defined in the file, we uses a null dtdelement to
	  represent it - we need to exclude this from the index

2005-10-28 11:53  davidfraser

	* storage/dtd.py: handle <!ENTITY % brandDTD SYSTEM
	  "chrome://branding/locale/brand.dtd"> (external entities in the
	  XML spec) See http://www.w3.org/TR/REC-xml/#dt-extent Also allow
	  dtd module to be run as a program that reads in a dtd and outputs
	  it to stdout (useful for testing)

2005-10-28 10:12  davidfraser

	* convert/: moz2po.py, po2moz.py: handle ini files that occur in
	  firefox 1.5 xpis

2005-10-28 10:01  davidfraser

	* storage/xpi.py: only cause problems when two or more
	  file/directory names giving locale are found if they mismatch,
	  and give some more details

2005-10-26 09:56  davidfraser

	* storage/po.py: handle unicode in both parts of the comment merge

2005-10-25 19:57  dwaynebailey

	* filters/autocorrect.py: Don't try and correct untranslated
	  messages.

2005-10-24 16:52  dwaynebailey

	* tools/pogrep.py: Allow unicode search strings.

2005-10-19 11:28  davidfraser

	* storage/po.py: convert items to unicode if required for merge
	  (untested)

2005-10-18 18:06  dwaynebailey

	* filters/checks.py: Handle variables that have a numeric endmarker
	  eg ('%', 1) I'm not sure if this actually ensures that they still
	  work correctly but it does solve the problem of generating the
	  error message for pofilter.  It was trying to create a string by
	  concatanating str + int.  Now we elimiante the int.

2005-10-18 17:04  davidfraser

	* CREDITS: Matthias Klose supplied some patches

2005-10-18 15:51  davidfraser

	* convert/convert.py, convert/oo2po.py, convert/po2oo.py,
	  storage/oo.py: addition of a long_keys option, to identify a
	  translation across files. [Matthias Klose] add a multifile option
	  with values "single" (the current behaviour), "toplevel",
	  "onefile". Some files do contain only a few translations, and it
	  makes sense to combine them. [Matthias Klose] modified the way
	  the multifile option was passed in the above patch [David Fraser]

2005-10-18 15:26  davidfraser

	* misc/optparse.py: fixed line-ending problem

2005-10-11 10:12  davidfraser

	* storage/po.py: split at any blank line (so that DOS line endings
	  are handled properly, gulp)

2005-09-28 09:56  dwaynebailey

	* tools/pydiff.py: Messed up the workin of --contains in the last
	  patches. This restores this option.

2005-09-28 08:57  dwaynebailey

	* tools/pydiff.py: Added --accelerator option to allow you to
	  ignore accelerator markers when identifying hunks using the
	  --*contains options.

	  This needs some refactoring.

2005-09-28 08:48  dwaynebailey

	* tools/pydiff.py: Added -I option to ignore case when using
	  --*contains options.

2005-09-27 12:05  davidfraser

	* tools/pydiff.py: greatly enhanced version moved things to a
	  class-based structure allow diffing directories, and recursive
	  diffs enabled a few GNU diff options that are useful fixed a few
	  minor bugs tried to make the output similar to GNU diff

2005-09-26 18:26  davidfraser

	* tools/: pydiff, pydiff.py: added pydiff tool

2005-09-19 19:46  dwaynebailey

	* storage/po.py: Add pofilter as a type of review marker.  This
	  means that pofilter comments ie "# (pofilter)" are now considered
	  as the same as "# (review)"

2005-09-10 00:56  dwaynebailey

	* filters/checks.py: handle single unicode string messages properly
	  in FilterFailure

2005-09-09 13:48  dwaynebailey

	* filters/: checks.py, pofilter.py: added check for invalid
	  characters that uses a file to read in the list of valid
	  characters

2005-09-08 16:25  dwaynebailey

	* convert/csv2po.py: improve the error messages when entry can't be
	  found

2005-09-08 11:25  dwaynebailey

	* filters/checks.py: have more helpful error messages for
	  untranslated, notranslatewords and musttranslatewords

2005-09-08 11:14  dwaynebailey

	* filters/pofilter.py: include previous pofilter commented entries
	  as needing review

2005-09-08 10:32  dwaynebailey

	* filters/pofilter.py: use thepo.isreview so we pick up new #
	  (review) style comments too added some fancy code to convert
	  oldstyle #, review messages to new style # (review) also don't
	  add a # (pofilter) message for review checks # (pofilter)
	  messages should go in othercomments, not visiblecomments

2005-09-08 09:53  dwaynebailey

	* storage/po.py: added ability to check for marked comments that
	  pofilter now produces rather than flags these will be of the form
	  # (commentmarker) detect # (review) as a review marker

2005-09-08 09:01  dwaynebailey

	* filters/checks.py: added helpful error message for escapes error,
	  make it a SeriousFilterFailure

2005-09-08 08:54  dwaynebailey

	* filters/: checks.py, pofilter.py: added the ability to
	  distinguish between normal filter failures and serious ones that
	  should mark a message as being fuzzy (so at the moment only
	  variable errors will make a message fuzzy) adjusted run_filters
	  to return lists of filtername, message_or_exception rather than
	  just a comment changed format of filter comments from #_
	  filtername: message to # (pofilter) filtername: message to make
	  them more easily detectable

2005-09-08 08:26  dwaynebailey

	* filters/autocorrect.py: added autocorrects for space, end
	  punctuation, initial caps

2005-09-07 23:07  dwaynebailey

	* filters/: checks.py, pofilter.py: rearranged the way we pass
	  options into pocheckfilter, pass the whole options object
	  rather...  added language option for spellchecker added
	  spellchecking code which can use either enchant (fast, by
	  default) or jToolkit.spellchecker (slow) make sure we handle
	  unicode properly in FilterFailure messages raise errors in
	  filters directly (easier for testing) improve brackets message
	  using FilterFailure make acronyms ignore variable names

2005-09-07 21:11  dwaynebailey

	* filters/: autocorrect.py, pofilter.py: changed ellipsis
	  autocorrect to handle it anywhere in the string use the more
	  correct unquotefrompo / quoteforpo to do autocorrect (we should
	  use this for checks too later)

2005-09-07 20:39  dwaynebailey

	* filters/: autocorrect.py, pofilter.py: added an autocorrect mode
	  which has some predefined autocorrects that it will output to the
	  results to in autocorrect mode, the standard comments etc will
	  not be added and the entries will only be output if an
	  autocorrect succeeds so far there is just one autocorrect
	  defined, for ellipsis...

2005-09-07 15:37  dwaynebailey

	* filters/checks.py: added FilterFailure exception class. This can
	  be used to produce custom error messages Basically instead of
	  returning False from the test, you raise a FilterFailure that you
	  pass a message or list of messages adjusted accelerators and
	  variables checks to produce intelligent messages using the
	  FilterFailure class added notranslatewords and musttranslatewords
	  to the filter for untranslated added Yet Another Variable Style
	  for OpenOffice ($ATTRIBUTENAME in svx/source/form.po)

2005-09-07 13:36  dwaynebailey

	* filters/: checks.py, pofilter.py: made musttranslate and
	  notranslate case sensitive as they are often used for product
	  names etc

2005-09-07 13:31  dwaynebailey

	* convert/csv2po.py, convert/po2csv.py, storage/csvl10n.py: added
	  support for --columnorder switches in csv2po and po2csv which
	  allow you to alter the order of columns by default the order is
	  source,msgid,msgstr but you can change this and skip columns by
	  using dummy column names

2005-09-05 21:38  dwaynebailey

	* filters/checks.py: Added another OpenOffice style test ("[", "]")
	  - this appears in the MSI installer.	Am worried that this might
	  cause too many false positives.  But lets see.  Ideally you
	  should be able to set the variable styles in the POT header (or
	  OOo should rationalise their variable styles).  (PPS: they use
	  both ~ and & as accelerators in this file... dumb dumb dumb)

2005-09-05 17:37  davidfraser

	* storage/po.py: make the unicode error clearer by reporting the
	  line number too...

2005-08-31 15:39  dwaynebailey

	* tools/poconflicts.py: Add --invert (-v) - this swaps the msgid
	  and msgstr for the conflict comparison this allowing us to
	  extract destination words that were used to translate different
	  source words.  Most are OK but a few will be usuability issues.

2005-08-24 18:40  davidfraser

	* tools/poconflicts.py: removed old reduction methods added simple
	  plural conflation

2005-08-24 17:12  davidfraser

	* tools/poconflicts.py: tried to improve the algorithm for grouping
	  conflicts - now uses the longest word in the msgid (other
	  algorithm commented out)

2005-08-24 14:24  davidfraser

	* tools/poconflicts.py: fixed help string and added description of
	  operation handle trailing - in flatmsgid for filename, use
	  "conflicts.po" if its empty

2005-08-24 14:14  davidfraser

	* tools/: poconflicts, poconflicts.py: added po conflict detection
	  tool

2005-08-24 11:44  davidfraser

	* filters/pofilter.py: added must translate / no translate
	  commandline options

2005-08-17 15:24  davidfraser

	* filters/: checks.py, test_checks.py: renamed untranslatablewords
	  to notranslatewords and added musttranslatewords (the logical
	  opposite) added test and extended tests slightly

2005-08-17 15:06  davidfraser

	* filters/: checks.py, test_checks.py: realized the logic for the
	  untranslatable test was the wrong way round...

2005-08-17 14:48  davidfraser

	* filters/checks.py: more sane way to do customization for projects
	  (update config rather than overwriting it)

2005-08-17 12:36  davidfraser

	* filters/: checks.py, pofilter.py, test_checks.py: separated out
	  checker configuration into its own object (to allow user config
	  read from files later...) moved untranslatablewords into checker
	  configuration ignore untranslated test if no untranslatablewords
	  adjusted derived classes, test accordingly

2005-08-17 12:15  davidfraser

	* filters/: checks.py, test_checks.py: added "stopwords"
	  (untranslatable words) - list needs to be made configurable added
	  first py.test based tests on checks (currently just tests
	  construction and stopwords)

2005-08-03 23:17  dwaynebailey

	* convert/convert.py, misc/optrecurse.py: All command line options
	  that can take a value from a predefined list now list the valid
	  values.

2005-07-28 19:40  dwaynebailey

	* convert/: dtd2po.py, oo2po.py, prop2po.py: Add
	  X-Accelerator-Marker to the PO header.  This is the preliminary
	  to embeding more of this info in the PO file header and allowing
	  tools like pofilter and Pootle to use that information to manage
	  checking and accelerator highlighting.

2005-07-02 22:51  davidfraser

	* convert/: po2ts.py, po2xliff.py: make sure po2xxx.convertfile
	  works with a single pofile parameter for input for consistency

2005-07-01 21:14  davidfraser

	* __init__.py, __version__.py, convert/__init__.py,
	  convert/convert.py, convert/csv2po.py, convert/dtd2po.py,
	  convert/html2po.py, convert/moz2po.py, convert/mozfunny2prop.py,
	  convert/nb2po.py, convert/oo2po.py, convert/po2csv.py,
	  convert/po2dtd.py, convert/po2html.py, convert/po2moz.py,
	  convert/po2nb.py, convert/po2oo.py, convert/po2prop.py,
	  convert/po2tmx.py, convert/po2ts.py, convert/po2txt.py,
	  convert/po2xliff.py, convert/poreplace.py, convert/pot2po.py,
	  convert/prop2mozfunny.py, convert/prop2po.py, convert/sxw2po.py,
	  convert/ts2po.py, convert/txt2po.py, convert/xliff2po.py,
	  filters/__init__.py, filters/checks.py, filters/decoration.py,
	  filters/helpers.py, filters/prefilters.py, misc/__init__.py,
	  misc/csv.py, misc/dictutils.py, misc/optparse.py,
	  misc/optrecurse.py, misc/progressbar.py, misc/quote.py,
	  misc/setup.py, misc/sparse.py, misc/textwrap.py,
	  misc/wStringIO.py, misc/xmlwrapper.py, misc/zipfileext.py,
	  storage/__init__.py, storage/csvl10n.py, storage/dtd.py,
	  storage/html.py, storage/oo.py, storage/po.py,
	  storage/properties.py, storage/tmx.py, storage/ts.py,
	  storage/xliff.py, storage/xpi.py, tools/__init__.py,
	  tools/pocompile.py, tools/pocount.py, tools/podebug.py,
	  tools/pogrep.py, tools/pomerge.py: made all files python source
	  encoding marked as utf-8 [Simos Xenitellis] also fixed a
	  #!/usr/bin/python -> env python

2005-06-30 21:14  dwaynebailey

	* tools/pocount.py: Added totals fro CSV mode.	Mainly so that you
	  can easily use the data in bash scripts instead of having to
	  calculate it.

2005-06-30 21:00  dwaynebailey

	* convert/po2ts.py: Work with only po class within the conversion
	  class and move filehandling to outside the class.  This means we
	  can use the po2ts class in Pootle while still allowing the
	  command line po2ts to work.

2005-06-28 21:11  davidfraser

	* storage/po.py: use dictionary utilities to ensure that any new
	  items that are not already present will be ordered the same as
	  header_order

2005-06-28 19:55  davidfraser

	* storage/po.py: changed default headers and added header_order
	  element

2005-06-28 19:39  davidfraser

	* storage/po.py: improvements to header generation:   added
	  x_generator which can be overridden in a derived class (e.g. for
	  Pootle)   changed all makeheader arguments to be
	  key.lower().replace("-", "_") for consistency   adjust kwargs to
	  makeheader, updateheader to be titlecase if lowercase   deal with
	  header arguments case-insensitively	made parseheader use an
	  ordered dictionary so they come out in the same order they went
	  in   in updateheader, add a header element if one isn't present

2005-06-28 19:29  davidfraser

	* convert/pot2po.py: renamed all header variables to be aligned
	  with the real header name parameters to makeheader have changed
	  like this so it makes it easier

2005-06-28 19:28  davidfraser

	* misc/dictutils.py: added dictutils for case-insensitive and
	  ordered dictionaries

2005-06-14 18:21  davidfraser

	* convert/prop2mozfunny.py: ignore comments that get inserted by
	  mozfunny2prop (header describing file type) po2inc also needs to
	  convert template

2005-06-14 18:16  davidfraser

	* convert/prop2mozfunny.py: templates file needs to be converted to
	  properties as well

2005-06-14 18:08  davidfraser

	* convert/: moz2po.py, po2moz.py: convert funny mozilla files from
	  CVS as well

2005-06-14 18:07  davidfraser

	* convert/: mozfunny2prop.py, prop2mozfunny.py: added po conversion
	  methods as well using prop2po / po2prop and fake file objects
	  using wStringIO (also rename define to inc in function names,
	  make a main function)

2005-06-14 16:11  davidfraser

	* convert/: mozfunny2prop.py, prop2mozfunny.py: moved encoding
	  parameter to function option (not yet commandline)

2005-06-14 16:05  davidfraser

	* convert/: mozfunny2prop.py, prop2mozfunny.py: implemented the
	  neccessary encoding conversions note that cp1252 is assumed for
	  .it files - this should be made an option, its defined in
	  charset.mk

2005-06-14 15:46  davidfraser

	* convert/: mozfunny2prop.py, prop2mozfunny.py: converted from
	  little scripts to having proper methods etc

2005-06-14 15:26  davidfraser

	* convert/xliff2po.py: the fuzzy flag is set if it was marked fuzzy
	  in the XLIFF [Fredrik Corneliusson]

2005-06-14 15:24  davidfraser

	* storage/xliff.py: patches from Fredrik Corneliusson:	 use a
	  getText method to get text recursively rather than assuming its
	  at the top level   handle there being no target translationnode

2005-06-09 20:13  dwaynebailey

	* storage/po.py: nplural => nplurals to prevent confusion in the
	  variable names

	  Also convert nplurals to an integer if it is currently a string

2005-06-09 20:04  dwaynebailey

	* storage/po.py: Change header creation strftime format string: %F
	  does not exist on the windows implementation so convert to
	  %Y-%m-%d which is equivalent.

	  %z also does not exist but am not sure how to change that.  The
	  problem is that windows uses %Z instead which is the text based
	  time zone desrtiptor.  This would be OK except that localised
	  Windows (ie Javier's Spanish one) uses non UTF-8 chars to
	  describe it which of course makes the whole file barf.  So either
	  be drop %z on Windows platforms or we work out how to escape the
	  text in the correct charset.

2005-06-08 14:16  dwaynebailey

	* filters/TODO: New filter for checking for double caps issues Eg.
	  SLOw RElease of CAps LOck

2005-05-14 16:57  dwaynebailey

	* convert/po2xliff.py: For now skip plural messages.

2005-05-14 16:55  dwaynebailey

	* convert/TODO: Note plural handling problem in CSV and XLIFF

2005-05-14 16:52  dwaynebailey

	* storage/po.py: Handle the case where there is no Plural-Form
	  correctly

2005-05-07 11:48  davidfraser

	* storage/po.py: allowed setting an elementclass for a pofile,
	  which will use that class - default is still poelement also made
	  copy method use the actual class of the object (this allows
	  pootlefile to use a derived pootleelement)

2005-05-06 11:42  davidfraser

	* storage/po.py: if msgid is plural, include plural in msgidlen

2005-05-06 10:14  davidfraser

	* storage/po.py: when unquoting from po, if first line is blank
	  then don't join with line break

2005-04-28 10:33  dwaynebailey

	* convert/po2xliff.py: Move the file parsing out of convertor into
	  convertpo.  This will allow us to use the XLIFF convertor in
	  Pootle.

2005-04-26 14:58  dwaynebailey

	* storage/po.py: Escape \t correctly - might need to consider
	  others such as \v, etc but did this on an as needed basis.  Only
	  update the header if there is already an entry by that name
	  present or iff you specify the add flag.

2005-04-21 16:47  davidfraser

	* storage/xpi.py: adjusted findlangreg to be able to detect locale
	  / region on the jar name this is because the latest Firefox
	  structure expects the jars to contain locale/xxx rather than
	  locale/en-US/xxx etc reported by Richard Allen

2005-04-21 11:32  davidfraser

	* __version__.py: version 0.8rc3

2005-04-21 11:23  davidfraser

	* tools/: ooo_languageselector.png, ooswitchlang, ooswitchlang.ico:
	  removed ooswitchlang tool as its obsolete for OOo 2.x and can
	  always be retrieve from CVS :-)

2005-04-20 14:43  davidfraser

	* CREDITS: removed pootle-specific credits (moved to
	  Pootle/CREDITS)

2005-04-20 12:47  davidfraser

	* convert/oo2po.py: updated oo2po to use a similar command-line
	  syntax to po2oo (NOTE: this requires changes to scripts!) require
	  a targetlanguage if not producing POTs set the source language as
	  English if not supplied (using existing languages to calculate
	  1.x/2.x) don't operate without languages any more, improve error
	  detection and reporting

2005-04-20 12:36  davidfraser

	* convert/convert.py: added verifyoptions hook for global
	  verifications that you don't want to fail on every file (see next
	  commit to oo2po)

2005-04-20 12:33  davidfraser

	* storage/oo.py: collect all the different languageids present in
	  the oofile

2005-04-19 23:40  dwaynebailey

	* filters/checks.py: Added $[blah] variable type

2005-04-18 23:36  dwaynebailey

	* filters/checks.py: OpenOffice has yet another variable style -
	  ($...) of course itm might be a $... within () but it appeard not
	  to be :(.

2005-04-14 11:20  davidfraser

	* misc/optrecurse.py: added ability for commands to produce man
	  pages with --manpage option make sure the usetemplates errors
	  don't produce an error when trying to make an error (if inputext
	  and templateext are both None)

2005-04-14 09:08  davidfraser

	* storage/po.py: initialize newcharsetline properly if no charset
	  found in charsetline (thanks pychecker)

2005-04-13 17:38  davidfraser

	* convert/: oo2po.py, po2oo.py: vastly improve the language
	  handling code rather than assume lines are in the correct order
	  in po2oo, only add lines for a language if a translation is
	  present set the language correctly by requiring the language code
	  (and improving the options setup) now renumberdest is not needed
	  added a sourcelanguage option as well for people who want to use
	  French etc for msgid

2005-04-05 22:01  davidfraser

	* CREDITS: added credit to Fredrik Corneliusson for xliff work

2005-04-05 22:00  davidfraser

	* CREDITS: added SVG logo for Pootle from Lucas Veietes

2005-04-04 09:41  davidfraser

	* convert/po2xliff.py: support placeholder (variable) markup, and
	  speed up xliff element generation [Fredrik Corneliusson]:
	  > I've changed so that placeholders such as %s gets marked up
	  with
	  > ph(placeholder) tags. It also sets the translated attribute and
	  fuzzy
	  > state when appropriate.

	  > As I found the xliff2po script to be extremely slow
	  > (minutes for common po file) I made addtransunit method a
	  little less
	  > naive so it's now a matter of seconds for the same po file.

2005-04-04 09:39  davidfraser

	* storage/xliff.py: made prettification of xml an option [Fredrik
	  Corneliusson]:
	  > I also had to chang so prettyprint in the storage/xliff.py
	  getxml
	  > method is optional as I don't want to get whitespace into the
	  > translation units.

2005-03-29 20:46  dwaynebailey

	* storage/po.py: Add getheaderplural() to retrieve the plural-forms
	  header values

2005-03-29 19:22  davidfraser

	* convert/po2oo.py: don't print out an error on language code
	  switch if line doesn't have any text (Pavel's request)

2005-03-22 08:17  dwaynebailey

	* storage/po.py: If there is no header then don't update any header
	  items. Don't even try to create a header.

2005-03-21 20:12  dwaynebailey

	* storage/po.py: Added a method to update the Plural-Forms header

2005-03-19 12:01  dwaynebailey

	* convert/po2tmx, convert/po2tmx.py, storage/tmx.py: po2tmx allows
	  us to convert PO files to TMX (Translation Memory eXchange)
	  format.  This format is designed to allow the sharing of TM data.

	  This implementation is beta alpha quality and has been sitting
	  neglected on my harddrive.  It is probably better that it move to
	  a new home where someone can take good care of it.

	  The TMX files it builds are probably wrong.  But at least if
	  people can test it then we can begin correcting errors.

	  setup.py now includes a new section for installing beta software.
	   Thus po2tmx will not be installed by default but requires:

	    installbeta = True

	  Enjoy!

2005-03-18 18:51  davidfraser

	* storage/csvl10n.py: handle plain and unicode strings in cvsl10n

2005-03-18 16:19  dwaynebailey

	* storage/po.py: Remove some debugging code

2005-03-18 16:01  dwaynebailey

	* storage/po.py: POT-Creation-Date now has correct timezone
	  information.	Same will apply to PO-Revision-Date if it is set.
	  Will probably still have problems if you set creationdate or
	  revisiondate to a time object.

2005-03-18 14:23  davidfraser

	* storage/po.py: FIXED: copy wasn't copying the constituent
	  elements (was shallow), so altering the copied element altered
	  the original

2005-03-15 15:29  davidfraser

	* tools/pocompile.py: add an encoding header so Python doesn't
	  issue a warning about Martin Loewis with a fancy o

2005-03-14 14:47  dwaynebailey

	* storage/csvl10n.py: Create the dictionary using UTF-8 encoding.
	  This eliminates crashes on Unicode.  This should probably
	  inteligently determine the output encoding.  Either from the PO
	  header or a command line options.  But utf-8 is probably all we
	  need.

2005-03-14 00:39  dwaynebailey

	* storage/po.py: Update arbitrary PO header items.

2005-03-11 17:09  dwaynebailey

	* tools/: pocompile, pocompile.py: We can now compile PO files into
	  MO (Machine Object) files that can actually be used on a users
	  machine.  The main reason for this is so that Pootle can have the
	  option of creating MO files for users to download and install.

2005-03-02 07:54  dwaynebailey

	* filters/TODO: pofilter - sees %s %s as a doubleword

2005-03-01 16:22  dwaynebailey

	* tools/TODO: Some pocount bugs

2005-03-01 14:15  dwaynebailey

	* tools/pocount.py: Use --csv to output counts in Comma Seperated
	  Value format for import into a spreadsheet.

2005-02-28 17:30  davidfraser

	* convert/po2oo.py: handle unicode strings coming from the PO file
	  (encode as UTF-8)

2005-02-28 16:55  davidfraser

	* storage/oo.py: handle unicode filenames within oo file

2005-02-25 10:28  dwaynebailey

	* filters/checks.py: Remove accelerators before checking capitals.

2005-02-25 09:44  dwaynebailey

	* convert/TODO: Wish for --no-wrap to prevent lines being broken
	  when creating the PO file.  Mainly to help localisaers who will
	  use CAT tools which can't segment across line breaks.

2005-02-21 10:52  davidfraser

	* convert/prop2mozfunny.py: fixed up handle of unicode in funny
	  mozilla files

2005-02-18 22:04  davidfraser

	* storage/po.py: POT files contain CHARSET as a placeholder for the
	  encoding, we need to ignore it (this could be improved to map
	  CHARSET to None)

2005-02-18 21:48  davidfraser

	* convert/: mozfunny2prop.py, prop2mozfunny.py: added tools for
	  handling funny .inc / .it files from firefox CVS (very primitive)

2005-02-18 20:56  davidfraser

	* convert/po2dtd.py, misc/quote.py, storage/dtd.py: fixed up
	  quoting in dtds (would give problems with both " and ' in the
	  string) the correct way to do this is to use a &apos; for the '
	  (if quoting with ') or a &quot; for the " (if quoting with ") see
	  http://www.w3.org/TR/2004/REC-xml11-20040204/#NT-EntityValue and
	  #syntax also encode the line if it comes out as unicode in
	  tolines fixed up general logic for eitherquotestr so it will
	  escape normally (though that's not whats wanted for dtds)

2005-02-17 20:05  davidfraser

	* convert/: po2dtd.py, po2prop.py: since po module now decodes
	  strings to unicode we don't need to decode them ; still do if str
	  incase

2005-02-17 19:54  davidfraser

	* storage/po.py: handle missing encoding when encoding / decoding
	  (we have to have one on encoding, just ignore on decoding)

2005-02-17 19:30  davidfraser

	* storage/po.py: added code to encode / decode PO files based on
	  the encoding specified in their header, rather than hard-coding
	  UTF-8

2005-02-10 21:07  dwaynebailey

	* storage/po.py: Added missing header entries: Report-Msgid-Bugs-To
	  and Plural-Forms

2005-02-04 15:34  davidfraser

	* storage/ts.py: silly variable naming fix rearrangement make sure
	  getmessagetranslation only gets one node

2005-02-04 15:04  davidfraser

	* storage/ts.py: still need to catch the helper function for some
	  reason

2005-02-04 14:57  davidfraser

	* storage/ts.py: rather than having funny helper function names,
	  set up the helper methods as normal functions added an index on
	  message source per context node, to speed up searching

2005-02-04 14:46  davidfraser

	* storage/ts.py: added new clever helper for searching elements by
	  tagname (it takes advantage of the structure of the xml file, you
	  say what parents to search under) added that as
	  .searchElementsByTagName on Document and Elements within minidom
	  moved helper functions out of QtTsParser, they really are
	  functions use the search function to speed up finding things

2005-02-04 14:07  davidfraser

	* storage/ts.py: added faster helper for getElementsByTagName that
	  uses iterator added getFirstElementByName that knows how to take
	  advantage of this in the common case of just getting one child
	  taught getnodetext to handle None

2005-02-04 08:11  davidfraser

	* convert/ts2po.py: use markfuzzy to do fuzzy marking consistently
	  also don't mark blank unfinished messages as fuzzy

2005-02-04 07:30  davidfraser

	* convert/ts2po.py, storage/ts.py: renamed getmessageattributes to
	  getmessagetype, and changed type/msgtype variables to transtype

2005-02-04 07:26  davidfraser

	* storage/ts.py, convert/po2ts.py: added default comment value of
	  None to addtranslation

2005-02-04 07:23  davidfraser

	* convert/po2ts.py, storage/ts.py: removed TODO for adding
	  translation types renamed type to transtype and added default
	  value of None (no type)

2005-02-04 07:17  davidfraser

	* convert/ts2po.py, CREDITS, convert/po2ts.py, storage/ts.py:
	  [Marek Wieckowski] added support for comments, and types in ts
	  files - "obsolete" and "unfinished" patch received on
	  translate-devel, Fri, 4 Feb 2005 05:51:16 +0100 (CET)

2005-02-02 13:54  davidfraser

	* convert/po2xliff.py: handle missing line numbers properly

2005-02-02 13:44  davidfraser

	* convert/po2xliff.py: added messages_%d id to new trans-unit nodes

2005-02-02 13:37  davidfraser

	* convert/po2xliff.py, storage/xliff.py: added PoXliffParser
	  derived from XliffParser to handle po-guide specific things use
	  this to put translations in body element made XliffParser derive
	  from object so it is a new-style class added XliffParser method
	  for creating filenode so it can be overridden

2005-02-02 13:24  davidfraser

	* convert/po2ts.py, storage/ts.py: _write_data should really be
	  minidom._write_data, and a comment fix

2005-02-02 13:10  davidfraser

	* storage/xliff.py, convert/po2xliff.py, convert/xliff2po.py: got
	  po2xliff working in initial form misc changes: fixed up call to
	  minidom._write_data in xliff added method to add a transunit node
	  fixed up getnodetext to handle null Text too fixed up
	  getting/setting of attributes

2005-02-02 12:07  davidfraser

	* storage/xliff.py, convert/po2xliff, convert/po2xliff.py,
	  convert/xliff2po, convert/xliff2po.py: added initial xliff
	  support base on ts code

2005-01-19 20:29  davidfraser

	* tools/pogrep.py: handle po entries that have a plural msgid but
	  not a plural msgstr (this should really be fixed elsewhere)

2005-01-19 20:12  davidfraser

	* storage/po.py: removed erroneous .msgid

2005-01-19 20:06  davidfraser

	* storage/oo.py: raise a clearer error if a line doesn't contain
	  enough tabs to determine the module

2005-01-19 20:01  davidfraser

	* convert/oo2po.py, convert/po2oo.py, storage/po.py: moved and
	  refactored po string quoting / unquoting functions from
	  convert/oo2po,po2oo to storage/po adjusted getunquotedstr to pass
	  parameters when used on a plural string entry, added TODO to
	  refactor it we now have quoteforpo and unquotefrompo as fairly
	  good symettrical quote/unquote functions getunquotedstr calls
	  should be replaced with calls to unquotefrompo and tested where
	  practical

2005-01-19 12:56  davidfraser

	* filters/decoration.py: implement more careful check for degrees
	  sign using unicode, fail gracefull if not utf-8

2005-01-19 12:39  davidfraser

	* filters/: checks.py, pofilter.py: added support for giving a
	  custom errorhandler to a TranslationChecker rather than raising
	  an error on any error in the filter

2005-01-11 23:28  dwaynebailey

	* tools/TODO: Two bugs related to obsolete messages have been fixed

2005-01-11 00:14  dwaynebailey

	* storage/po.py: Wrong indent caused only one line of the obsolete
	  message to be output

2005-01-11 00:11  dwaynebailey

	* tools/pocount.py: Ignore obsolete messages: do not count them as
	  untranslated.

2005-01-11 00:00  dwaynebailey

	* storage/po.py: Now store obsolete messages seperately from other
	  comments.  Added isobsolete() function.

	  Now fuzzy obsolete messages are not made not fuzzy during a
	  pomerge.

	  Should probably eventually actually read the msgid and msgstr
	  contents of the obsolete message for doing machine assisted
	  translations.

2005-01-06 17:00  dwaynebailey

	* README: Made Python 2.3 the recommended environment.

2005-01-06 14:52  dwaynebailey

	* filters/TODO: Suggested file level checks

2005-01-06 14:08  dwaynebailey

	* filters/checks.py: Added doublewords check.  This will find
	  occurances of "the the" in translations, most of these we assume
	  are in fact wrong.

2005-01-06 02:37  dwaynebailey

	* tools/pocount.py: Always provide a total if more than one file is
	  counted whether the input is a file(s) or a directory.  We also
	  now provide a total of the number of files counted.

2005-01-05 19:35  dwaynebailey

	* filters/TODO: Some bugs identified

2005-01-05 15:01  dwaynebailey

	* filters/checks.py: Validated all filters that need a precondition
	  untranslated check.  Added: brackets, filepaths, isfuzzy and
	  isreview Removed: long, short And any others for which I couldn't
	  create a test.

2005-01-05 14:15  dwaynebailey

	* filters/checks.py: Add compendiumconflicts as a precondition for
	  a number of tests.  This will prevent many false positives:
	  errors identified but actually caused because of the compendium
	  conflict syntax.

2005-01-03 10:00  dwaynebailey

	* tools/TODO: Bug pomerge removes fuzzy markers from obsolete
	  messages

2005-01-03 09:56  dwaynebailey

	* filters/TODO: More pofilter wishes

2005-01-02 14:43  dwaynebailey

	* filters/checks.py: Add setencecount to untranslated precondition

2005-01-01 11:13  dwaynebailey

	* filters/checks.py: Minor formating fix

2005-01-01 11:05  dwaynebailey

	* filters/: TODO, checks.py: Added startcaps which checks to see
	  that the starting letter is correctly capitalised.  It is more
	  specific then simplecaps, avoids confusion for the person
	  checking and picks up a few that simplecaps misses.

	  It does not correctly handle locale info about valid capitals.

2004-12-31 17:18  dwaynebailey

	* README: The toolkit does more but we need to tell people that.
	  pofilter has more checks and of course we have ts2po and html2po
	  and pot2po.

2004-12-20 12:24  davidfraser

	* filters/checks.py: if exceptions happen in a filter, show some
	  information about what happened (and the strings)

2004-12-17 23:03  davidfraser

	* convert/TODO: added ideas from Pavel on IRC

2004-12-17 16:20  dwaynebailey

	* convert/TODO: po2dtd apersand checks don't give you good info as
	  to wherre exactly the error occurs.

2004-12-17 11:43  dwaynebailey

	* convert/TODO: Added TODO about installing docs in the right place
	  on Linux

2004-12-17 09:19  dwaynebailey

	* README: Credit Javer as a docs copyright holder.  Caveat about
	  quoted emails

2004-12-16 19:04  davidfraser

	* CREDITS: added some more credits

2004-12-16 18:59  davidfraser

	* convert/: pot2po, pot2po.py: added simple pot2po tool

2004-12-16 18:41  davidfraser

	* storage/po.py: added lots more options to makeheader (to enable
	  it to make PO headers as well as POT ones) added a parseheader
	  function

2004-12-16 11:52  dwaynebailey

	* filters/TODO: Spelling test wish

2004-12-16 11:49  dwaynebailey

	* tools/TODO: Added bug: pocount counts obsolete messages as
	  untranslated

2004-12-16 09:44  dwaynebailey

	* filters/: TODO, checks.py: Added xmltags test that checks that
	  the tags in msgid == msgstr.	This will catch missing tags and
	  translated tags.  If tags cover the full length of the msgid then
	  we assume it is something like "<Error>" and skip it as you are
	  unlikely to find a proper XML/HTML tag on its own.

2004-12-16 09:39  dwaynebailey

	* filters/TODO: Gettext conflicts are marked fuzzy so by using
	  --nofuzzy you can skip them.

2004-12-14 23:32  dwaynebailey

	* filters/pofilter.py: Now correctly ignore reviews with --noreview
	  Also ensured that the default is to include revies and fuzzies

2004-12-14 23:26  dwaynebailey

	* filters/pofilter.py: Correctly ignore fuzzy messages when using
	  --nofuzzy

2004-12-14 22:15  davidfraser

	* convert/: dtd2po.py, moz2po.py, prop2po.py: added duplicates
	  option to moz2po, dtd2po and prop2po

2004-12-14 22:09  davidfraser

	* convert/: convert.py, oo2po.py: added new add_duplicates_option
	  to ConvertOptionParser so we can share it between different
	  scripts

2004-12-14 21:56  davidfraser

	* convert/: po2dtd.py, po2moz.py, po2prop.py: use add_fuzzy_option
	  to simplify life. also added to po2moz (using the underlying
	  functions it should all work)

2004-12-14 21:53  davidfraser

	* convert/: convert.py, po2oo.py: made add_fuzzy_option on
	  ConvertOptionParser so we don't duplicate work ...

2004-12-14 21:39  dwaynebailey

	* convert/po2prop.py: And now po2prop can ignore fuzzy entries
	  also.

2004-12-14 21:11  dwaynebailey

	* convert/po2dtd.py: po2dtd can now also ignore PO messages marked
	  as fuzzy

2004-12-14 18:40  davidfraser

	* convert/TODO: have fixed double escaping.  clarified oo output
	  order TODO

2004-12-14 18:31  davidfraser

	* convert/oo2po.py: added --duplicates option which specifies
	  whether to merge duplicates (previous default behaviour),
	  generate unique msgid_comments when required (or all the time),
	  or keep them also added option to specify nonrecursive input

2004-12-14 18:26  davidfraser

	* storage/po.py: added ability to specify different 'style's for
	  handling duplicates this includes adding a unique kde-comment
	  into the msgid if required (msgid_comment), or all the time
	  (msgid_comment_all), merging it (the previous behaviour, and the
	  default - merge), and ignoring them (keep)

2004-12-14 17:49  davidfraser

	* convert/po2oo.py: make sure that includefuzzy still produces
	  strings if there is no translation in the templatefile made
	  includefuzzy an attribute of reoo so that it doesn't have to be
	  passed around everywhere

2004-12-14 15:12  davidfraser

	* convert/po2moz.py: adjusted to new isarchive syntax (which checks
	  which field its for)

2004-12-14 14:13  dwaynebailey

	* filters/: TODO, checks.py: sentencecount - counts the number of
	  fullstops to see that they match. Ie a simple sentence counter.

2004-12-14 12:38  davidfraser

	* convert/po2dtd.py: do a decode/encode using UTF-8 when getting
	  label / accesskey, so that multibyte unicode characters are
	  handled correctly

2004-12-14 12:34  davidfraser

	* convert/dtd2po.py: changed decoding syntax to be more consistent
	  with the rest of the code

2004-12-14 12:29  davidfraser

	* convert/: dtd2po.py, po2dtd.py: added a mention that the DTD
	  files have to be in UTF-8 to the doc strings

2004-12-14 12:26  dwaynebailey

	* filters/TODO: Added some TODO items

2004-12-14 12:12  davidfraser

	* convert/dtd2po.py: Handle non-Ascii unicode accesskeys [Filip
	  Miletic]

2004-12-14 11:51  davidfraser

	* CREDITS: Added Credits

2004-12-13 18:43  davidfraser

	* convert/po2oo.py: added includefuzzy option that specifies
	  whether or not to use fuzzy translations. turned off by default
	  (this is a change)

2004-12-13 18:05  davidfraser

	* convert/po2oo.py: use the includeescape function to only include
	  escapes for \\n (since these aren't double-escaped in the file)

2004-12-13 18:02  davidfraser

	* misc/quote.py: added the ability to selectively include escapes
	  by passing an includeescapes function

2004-12-13 17:43  davidfraser

	* convert/: moz2po, moz2po.py, po2moz, po2moz.py: moved all the
	  actual functionality of the moz2po / po2moz scripts into
	  moz2po.py / po2moz.py, like all the other civilized scripts...

2004-12-13 17:37  davidfraser

	* convert/oo2po.py: make sure oomultifile is only used on input

2004-12-13 17:30  davidfraser

	* convert/oo2po.py: made sure that \n is not double-escaped, but
	  all other escapes are so that they will be handled properly in po
	  files

2004-12-13 17:21  davidfraser

	* convert/oo2po.py: made a quoteforpo function so that we can
	  change it to improve escaping

2004-12-13 17:19  davidfraser

	* storage/po.py: made parsing the inputfile an exposed (and
	  therefore repeatable, if you clean things up) function

2004-12-13 16:24  dwaynebailey

	* filters/checks.py: Added filepaths test to check for translated
	  paths.

2004-12-13 16:18  dwaynebailey

	* filters/checks.py: Added $(blah) style variables for GNOME
	  projects

2004-12-13 11:58  davidfraser

	* convert/po2oo.py: updated to only use oomultifile for output and
	  templates. added options to prevent even them from being
	  interpreted as recursive (useful for testing)

2004-12-13 11:29  davidfraser

	* convert/convert.py, misc/optrecurse.py: fairly big change to
	  ArchiveConvertOptionParser to allow specifying whether archive
	  formats are applicable to only input, output or templates...
	  added option "filepurpose" to isrecursive, isarchive (replacing
	  mustexist there), openarchive added new method "getarchiveclass"
	  which has the right logic and can be used to detect if something
	  is an archive check that a template is marked as recursive as
	  well as whether its an archive when opening a template file added
	  optional options "allowrecursiveinput/archive/output" which
	  default to True but can be set to False if recursive formats need
	  to be explicitly avoided

2004-12-13 09:41  davidfraser

	* convert/csv2po.py: the string might be unicode, so use whatever
	  type it is to filter alphanumeric characters...

2004-12-04 14:38  dwaynebailey

	* filters/pofilter.py: --header option adds an optional header to
	  the out PO file.

2004-12-04 14:31  dwaynebailey

	* tools/: TODO, pomerge.py: pomerge will now not merge header
	  entries.  When we can handle header merging properly we should
	  enable header merging as an option.

2004-12-04 01:04  dwaynebailey

	* filters/TODO: More TODOs

2004-12-03 22:32  dwaynebailey

	* tools/TODO: We wish for pomigrate in python

2004-12-03 17:55  davidfraser

	* storage/ts.py: added TODOs for parts of ts files not yet handled
	  (comments, translation types) changed addtranslation to make a
	  new translationnode to replace the old one ...

2004-12-03 17:32  davidfraser

	* convert/: po2ts, po2ts.py: added po2ts and po2ts.py as reverse of
	  ts2po and ts2po.py

2004-12-03 17:29  davidfraser

	* convert/: ts2po, ts2po.py: have made po2ts so you don't need to
	  write it anymore :-) cleaned up leftover code from whatever file
	  I based this on, that wasn't relevant

2004-12-03 17:24  davidfraser

	* storage/ts.py: enhanced ts storage module to support adding
	  translations and converting back to xml (in a pretty format)
	  added support for constructing blank QtTsParser objects changed
	  variable name

2004-12-03 16:11  davidfraser

	* convert/ts2po, convert/ts2po.py, storage/ts.py: added initial
	  code for handling Qt Ts files

2004-12-03 12:43  dwaynebailey

	* storage/po.py, tools/TODO, tools/pocount.py: Counts messages
	  marked for review seperately from the translated, fuzzy,
	  untranslated totals.

2004-12-02 23:41  dwaynebailey

	* tools/pocount.py: Lonely bracket

2004-12-02 22:11  dwaynebailey

	* tools/: TODO, pocount.py: Include blank msgid's in the count as
	  this give a "string" count that will match msgfmt --statistics.
	  This also does not change the word count, they're blank messages
	  after all!

2004-12-02 21:09  davidfraser

	* tools/pogrep.py: added default options to pogrepfilter
	  constructor to make it easier to use the class for other stuff
	  ...

2004-12-02 20:33  dwaynebailey

	* storage/po.py: Of course if you want the header to contain an
	  automatic timestamp then you should delete the old static
	  POT-Creation-Date line.

2004-12-02 18:39  davidfraser

	* storage/html.py: added code to handle entities and character refs

2004-12-02 18:09  davidfraser

	* convert/TODO: added more TODOs for oo2po / po2oo

2004-12-02 17:00  davidfraser

	* storage/properties.py: added more explicit error message for
	  problems with unicode in properties files

2004-12-02 16:10  dwaynebailey

	* tools/: TODO, pocount.py: Provide a total for each PO file
	  counted.  So you don't have to get the calculator to add the
	  translated + untranslated + fuzzy messages.

2004-12-02 13:01  davidfraser

	* storage/po.py, tools/pocount.py: added stuff to po.getunquotedstr
	  to handle dictinoaries for plural msgstr (in case it gets passed
	  in by someone not knowing it was a plural) now wordcount in
	  pocount.py doesn't need to know about it...  (this shouldn't be
	  used for normal translation, it's there just in case)

2004-12-02 12:47  davidfraser

	* __init__.py: the package should be called "the translate toolkit"
	  from now on...

2004-12-02 09:45  dwaynebailey

	* tools/: TODO, pocount.py: Only provide a Grand Total if more than
	  one file is counted

2004-12-02 09:39  dwaynebailey

	* tools/: TODO, pocount.py: pocount now correctly counts KDE style
	  plural messages. A better fix would be for the po class to
	  understand KDE plurals.

2004-12-01 16:59  davidfraser

	* tools/pocount.py: remember all the word counts for all the
	  elements' msgid and msgstr and sum them as required

2004-12-01 16:51  davidfraser

	* storage/csvl10n.py: remember the csv file's filename

2004-12-01 16:40  dwaynebailey

	* tools/: TODO, pocount.py: - Count msgid_plural properly by
	  craeting a seperate wordcount procedure for	msgid's that can
	  count msgid and msgid_plural - Removed some debugging output

2004-12-01 15:40  davidfraser

	* convert/: TODO, csv2po.py: added --charset option to csv2po that
	  sets what charset the csv files are in made PO files UTF-8

2004-12-01 15:18  davidfraser

	* tools/pocount.py: handle plurals in wordcount ...

2004-11-30 14:27  dwaynebailey

	* tools/TODO: Lots of pocount todo items

2004-11-28 16:15  dwaynebailey

	* convert/TODO, storage/po.py: POT headers now have the generation
	  date and time.  Timezone info seems to be missing however.

2004-11-28 15:18  dwaynebailey

	* convert/: dtd2po.py, po2dtd.py: Now can merge accelerator keys of
	  type: .accesskey, .accessKey, .akey.	Probably should define that
	  list of three types as some global but not sure how/where to do
	  that.

2004-11-28 09:10  dwaynebailey

	* filters/decoration.py: - If a number a suffixed with a degree
	  sign, then this now forms part of the   number for comparison.
	  This allows for '180° != 180'   NOTE: Not sure if this is 100%
	  the correct approach.  Should probably use   Unicode throughout
	  to not have to do this kind of unpacking.  - Reset carryperiod so
	  that you don't get number like 123.4.5 when the number   actually
	  was 123.45 (I'm sure it will expose a bug someday :)

2004-11-27 22:03  dwaynebailey

	* tools/pogrep.py: --accelerator allows you to specify the
	  accelerator key to ignore when matching.  This way you will find:
	  "File, &File. F&ile, etc".  Accepted accelerator is one of "_&~"

2004-11-27 18:46  davidfraser

	* filters/decoration.py: handle unicode when checking character
	  ranges

2004-11-21 16:40  dwaynebailey

	* README: Windows installation	instructions

2004-11-20 17:04  davidfraser

	* storage/po.py: added a copy method for copying poelements

2004-11-20 16:16  davidfraser

	* storage/po.py: use regular expressions to check for word
	  boundaries properly also allow adding / removing type comments
	  based on present keyword

2004-11-20 15:41  davidfraser

	* filters/pofilter.py, storage/po.py: added methods to set type
	  comments, in particular markfuzzy, and use them where done
	  manually before

2004-11-18 16:54  davidfraser

	* convert/oo2po.py: if we don't have extra lines for a element,
	  automatically make the translation blank

2004-11-18 16:44  davidfraser

	* misc/optrecurse.py: handle KeyboardInterrupts properly (don't
	  ignore them!) and set success to False on errors

2004-11-18 16:38  davidfraser

	* convert/TODO: added TODO to not use fuzzies in conversion cleaned
	  up other TODOs

2004-11-18 16:35  davidfraser

	* filters/pofilter.py: Don't process if no valid filters were
	  specified at all

2004-11-18 13:52  davidfraser

	* storage/po.py: join the comments with a "\n" if there are more
	  than one...  otherwise we get this: "_: Do not translate this.
	  Only change the numeric values if you need this ""dialogue box to
	  appear bigger.\n"

2004-11-18 13:44  davidfraser

	* storage/dtd.py: refactored so that we can parse successfully even
	  if entity name is on a separate line to <!ENTITY did this by
	  adding a separate state, should cause no problems :-)

2004-11-18 13:32  davidfraser

	* filters/checks.py: ignore numbers or single characters when
	  checking unchanged

2004-11-17 12:13  davidfraser

	* filters/checks.py: rather than assuming the strings are normal
	  strs, use type(strn) in case they are unicode

2004-11-15 22:37  davidfraser

	* misc/optrecurse.py: improved error correction and traceback
	  generation - added an errorlevel switch

2004-11-15 18:49  davidfraser

	* tools/podebug.py: added length limit option and consonant-filter
	  option added basename format str, versions with/without
	  extensions, dirname format str

2004-11-15 18:32  davidfraser

	* tools/podebug.py: made simple system to allow format strings for
	  podebug currently only %s (shrunk filename) and %f (full
	  filename) are provided

2004-11-15 14:39  dwaynebailey

	* filters/TODO: TODO items: added - skip entries that have
	  #-#-#-#-# problems complete - empty translations can be extracted
	  using blank, untranslated - for regex extraction use pogrep - KDE
	  comments are removed in tests that had problems with the comments
	  eg: long,   short, etc

2004-11-15 13:42  dwaynebailey

	* tools/pogrep: pogrep is now in tools not filters

2004-11-14 00:02  davidfraser

	* storage/po.py: fixed logic that was skipping the first line of
	  kde comments

2004-11-13 18:08  davidfraser

	* README: fixed invalid URL

2004-11-13 18:07  davidfraser

	* README: fixed spelling errors (aspell :-))

2004-11-13 16:19  davidfraser

	* filters/checks.py: added dictionary to find checker for a given
	  project code...

2004-11-13 13:49  dwaynebailey

	* README: Major revision of the README for 0.8 release

2004-11-12 16:51  davidfraser

	* ChangeLog: updated to recent ChangeLog

2004-11-12 16:51  davidfraser

	* misc/optrecurse.py: exclude CVS directories by default...

2004-11-12 14:00  davidfraser

	* tools/: pocount.py, pogrep.py: pychecker fixes:   sum is only
	  needed if builtin is not defined   logic in pogrep for multiple
	  msgstrs was wrong (using thepo.msgstr instead of each item)

2004-11-12 13:55  davidfraser

	* convert/README: removed README (we have docs\!)

2004-11-12 13:54  davidfraser

	* filters/: checks.py, decoration.py: TeeChecker should use the
	  checker to run_filters otherwise its an infinite loop...  removed
	  unneccessary import of sre, unused variable

2004-11-12 13:53  davidfraser

	* convert/: csv2po.py, html2po.py, nb2po.py, oo2po.py, po2html.py,
	  po2nb.py, po2txt.py, sxw2po.py, txt2po.py: only import the
	  convert module in the main method throughout some pychecker
	  fixups:   made constructors for conversion classes that need wrap
	  parameters   remove unneccessary imports of os, sre modules
	  txt2po didn't have a proper main method

2004-11-12 13:40  davidfraser

	* storage/csvl10n.py: pychecker fixup (unused variables)

2004-11-12 13:32  davidfraser

	* misc/: optrecurse.py, quote.py, sparse.py: pychecker changes (bad
	  variable names, unused variables)

2004-11-12 12:43  davidfraser

	* tools/__init__.py: better doc string

2004-11-12 11:30  davidfraser

	* convert/: convert.py, oo2po.py, po2oo.py: made oo2po, po2oo treat
	  any input file as a multifile archive (not just .gsi/.sdf/.txt)
	  implemented this by using None to refer to any file, but not
	  existing directories so to output to a directory tree, just make
	  sure the output directory exists

2004-11-12 10:03  davidfraser

	* storage/po.py: added better intelligence to handle kde comments
	  (they end at the \\n) this could probably use further
	  improvement...

2004-11-12 09:40  dwaynebailey

	* filters/checks.py: prefilter -> prefilters added removekdecomment
	  prefilter to brackets test

2004-11-12 09:33  davidfraser

	* filters/prefilters.py: added more intelligence to get kde
	  comments correctly

2004-11-11 16:36  dwaynebailey

	* tools/TODO: pomerge: - problem merging #: headers - need to be
	  able to run without templates

2004-11-11 15:02  dwaynebailey

	* tools/__init__.py: Tools should be installed as a module.

2004-11-11 14:56  dwaynebailey

	* filters/checks.py: Added brackets filter Remove KDE comments
	  before running tests on: long, short, blank and escapes.

2004-11-10 16:59  davidfraser

	* tools/: podebug, podebug.py: added podebug

2004-11-10 16:21  davidfraser

	* README: updated README to talk about Python 2.3

2004-11-10 16:10  davidfraser

	* __version__.py: version 0.8rc2

2004-11-10 15:40  davidfraser

	* filters/pogrep, filters/pogrep.py, tools/pogrep, tools/pogrep.py:
	  moved pogrep from filters to tools

2004-11-10 15:35  davidfraser

	* filters/: TODO, pofilter, pofilter.py, pogrep, pogrep.py:
	  rearranged scripts into script/module parts

2004-11-10 15:18  davidfraser

	* tools/: TODO, pocount, pocount.py, pomerge, pomerge.py: split
	  scripts into script / module parts

2004-11-10 10:18  davidfraser

	* storage/po.py, tools/pocount: pocount: use poelement class
	  methods rather than handling strings ourselves as that breaks
	  with plurals calculated length of msgstr correctly when used on
	  plurals (failed before)

2004-11-10 10:01  dwaynebailey

	* convert/po2csv.py: Incorrectly calling convertcsv

2004-11-09 18:19  davidfraser

	* filters/TODO, tools/TODO: added TODO to rearrange the
	  filters/tools scripts into script/module parts like I just did to
	  the convert tools...

2004-11-09 18:16  davidfraser

	* convert/: csv2po, csv2po.py, html2po, html2po.py, nb2po,
	  nb2po.py, oo2po, oo2po.py, po2csv, po2csv.py, po2csvmod.py,
	  po2html, po2html.py, po2nb, po2nb.py, po2oo, po2oo.py, po2txt,
	  po2txt.py, sxw2po, sxw2po.py, txt2po, txt2po.py: massive
	  reorganization to make sure all code is accessible via module, so
	  the files not ending in .py are just scripts to call a main
	  method in a module

2004-11-08 17:40  davidfraser

	* convert/po2oo: started adding support for using simple
	  unduplicated english GSI as input this duplicates the lines if
	  neccessary

2004-11-04 21:52  davidfraser

	* filters/pofilter: fixed options.filterclass so it works with new
	  multiple classes (StandardPOChecker is always included now)

2004-11-04 21:45  davidfraser

	* filters/prefilters.py: added a function to strip out kde comments

2004-11-04 16:11  davidfraser

	* convert/: po2csv, po2csvmod.py: moved all the po2csv code into
	  po2csvmod.py so that we can call it from pootle

2004-11-04 14:58  dwaynebailey

	* filters/checks.py: Added tests: - kdecomments: detects kde
	  comments in the msgstr - compendiumconflicts: detects #-#-#-#-#
	  conflicts in files - acronyms: cehcks that acronyms in the msgid
	  are also in the msgstr

2004-11-04 14:22  davidfraser

	* filters/: checks.py, pofilter: created new POChecker paradigm for
	  doing tests on po elements rather than just strings moved tests
	  for fuzzy, review into this added TeeCheckers which can handle
	  multiple filters, POTeeChecker which can handle POChecker or
	  normal Checkers

2004-11-03 09:18  davidfraser

	* filters/pofilter: added code to be able to exclude fuzzy / review
	  elements from filtering entirely [Dwayne Bailey] this still
	  probably needs more refinement alongside the filter checks for
	  fuzzy / review

2004-11-03 09:13  davidfraser

	* filters/checks.py: filteraccelerators when checking unchanged, so
	  just changing the accelerator doesn't qualify as a real change
	  [Dwayne Bailey]

2004-11-02 11:25  dwaynebailey

	* filters/checks.py: Mozilla variable checks cahnged "#, None" to
	  "#, 1" So only check for #1, #2

2004-10-28 17:56  davidfraser

	* storage/dtd.py: improved entity parsing so we can handle entities
	  split over multiple lines  changed the order of the position
	  checks so that we don't run into the end of the line...  took out
	  FIXME about single quotes (they are used in official firefox
	  source) raise an error if we get an unexpected quote character

2004-10-28 17:40  davidfraser

	* storage/dtd.py: don't process entities that are inside
	  comments...

2004-10-28 17:32  davidfraser

	* misc/optrecurse.py: use special options.psyco value None to
	  indicate no option was passed Only display a psyco warning if it
	  was set to use explicitly

2004-10-28 17:27  davidfraser

	* convert/po2oo: added a switch to keep the timestamps, which means
	  you can compare files more easily

2004-10-28 15:07  davidfraser

	* misc/optrecurse.py: fixed check for whether we need to know the
	  number of files (console was old option) should now go to 100% in
	  default case (was just using count instead of percent because of
	  this)

2004-10-28 10:26  davidfraser

	* convert/translatepath.py, filters/pofilter, filters/pogrep,
	  filters/translatepath.py, tools/pomerge, tools/translatepath.py:
	  removed all remaining translatepath stuff

2004-10-28 10:09  davidfraser

	* convert/: dtd2po.py, html2po, moz2po, nb2po, oo2po, po2csv,
	  po2dtd.py, po2html, po2nb, po2oo, po2prop.py, po2txt, prop2po.py,
	  sxw2po, txt2po: removed translatepath imports ; it doesn't work
	  in its current form

2004-10-28 09:48  davidfraser

	* convert/TODO: added todo to change the order of csv columns

2004-10-28 09:36  davidfraser

	* convert/csv2po: enable conversion without template

2004-10-25 18:51  davidfraser

	* convert/TODO: some mozilla stuff is done found an error on
	  firefox dtds

2004-10-25 13:13  dwaynebailey

	* filters/checks.py: Added #1 style variables to the --mozilla
	  variable checks.

2004-10-22 15:54  davidfraser

	* misc/wStringIO.py: catch error trying to do getvalue on closed
	  files... (self.buf is gone because we delete it) this can happen
	  if for example a CatchStringOutput has close() called twice...

2004-10-22 15:47  davidfraser

	* convert/convert.py: don't close files we copy because the
	  processfile module does that anyway...  make processfile check
	  that files aren't a tty (as the copy file did...) (not sure if
	  this is neccessary but can't hurt)

2004-10-22 14:15  dwaynebailey

	* tools/pocount: - Laoyout is now more readable with similar items
	  grouped in columns.  - Introduced a translated count so that we
	  can get better total figures - Entries marked fuzzy and which are
	  untranslated are no longer double counted.	A n entry is fuzzy
	  if it is marked fuzzy and in not untranslated. This change
	  also makes it easier to total and evaluate figures.

2004-10-21 17:20  davidfraser

	* convert/po2moz: open the outputarchive in write mode if it
	  doesn't exist oh, and translatepath doesn't work...

2004-10-19 13:46  davidfraser

	* filters/pofilter: remove -x and change --exclude to
	  --excludefilter to prevent option with main optrecurse
	  -x/--exclude option for folders

2004-10-18 19:46  davidfraser

	* convert/csv2po, convert/dtd2po.py, convert/html2po,
	  convert/moz2po, convert/nb2po, convert/oo2po, convert/po2csv,
	  convert/po2dtd.py, convert/po2html, convert/po2moz,
	  convert/po2nb, convert/po2oo, convert/po2prop.py, convert/po2txt,
	  convert/prop2po.py, convert/sxw2po, convert/translatepath.py,
	  convert/txt2po, filters/pofilter, filters/pogrep,
	  filters/translatepath.py, tools/pocount, tools/pomerge,
	  tools/translatepath.py: added translatepath to all the tools,
	  which tries to find the right directory and add it to the python
	  path if translate can't be imported. one of these lives in each
	  directory with executable scripts in them so they can find it
	  automatically

2004-10-18 19:37  davidfraser

	* ChangeLog: updated ChangeLog to 0.8rc1

2004-10-04 16:39  davidfraser

	* __version__.py: version 0.8 RC1

2004-10-04 16:37  davidfraser

	* storage/oo.py: refactored oomultifile to work both as input file
	  and as output file added 'mode' argument ('w' for writing, also
	  done if file doesn't exist and mode is None) uses
	  wStringIO.CatchStringOutput to write output file contents...

2004-10-04 16:32  davidfraser

	* convert/: convert.py, po2moz: added support for excluding files
	  to convert.py (with -x/--exclude switch) added direct support for
	  output archives to convert.py, moved some code out of po2moz /
	  refactored (this will be used in po2oo too) close output files in
	  processfile for ArchiveConvertOptionParser, since they may be
	  subfiles...  also added support for passing kwargs through
	  openarchive (so far just mode='w' is needed)

2004-10-04 16:29  davidfraser

	* storage/xpi.py, misc/wStringIO.py: moved CatchStringOutput from
	  xpi to wStringIO

2004-10-04 09:21  davidfraser

	* misc/optrecurse.py: added an --exclude (or -x) option, so that
	  for example you can ignore CVS directories.  Supports pattern
	  matching e.g. *.bak

2004-10-01 16:14  davidfraser

	* storage/oo.py, convert/oo2po: made it so oo2po po files now
	  contain the original oo pseudo-filename in the comment at the top

2004-10-01 15:41  davidfraser

	* convert/: oo2po, po2oo: include the resourcetype in the key to
	  prevent overlapping keys made escaping consistent and workable so
	  that the round trip is always correct

2004-10-01 15:35  davidfraser

	* misc/quote.py: took out odd method of not using escapes, do it
	  sensibly

2004-10-01 12:12  davidfraser

	* convert/: oo2po, po2oo: reduce the keys so it only contains the
	  base filename (the project and  directory are in the po file
	  name)

2004-10-01 11:44  davidfraser

	* storage/oo.py: updated to work with
	  convert.ArchiveConvertOptionParser made it able to handle input
	  file name more cross-platform path generation iterator, in
	  operator, openfile renamed to openinputfile

2004-10-01 11:41  davidfraser

	* convert/: oo2po, po2oo: added .txt as extension for oomultifiles

2004-09-30 17:22  davidfraser

	* convert/oo2po: support gsi and sdf extensions as archives

2004-09-30 17:20  davidfraser

	* convert/convert.py: check if templates are used before trying to
	  access options.templates, to prevent error...

2004-09-30 16:58  davidfraser

	* convert/oo2po: switched to use convert.ArchiveConvertOptionParser
	  (since it is the revamped MozCOP that GSICOP was based on)

2004-09-30 12:47  davidfraser

	* convert/oo2po: added a TODO

2004-09-30 11:52  davidfraser

	* convert/: convert.py, moz2po, po2moz: refactored as much as
	  possible from MozConvertOptionParser classes in moz2po and po2moz
	  the new class is convert.ArchiveConvertOptionParser, should be
	  able to use for OO GSI files too...  moz2po now just uses the
	  class directly, po2moz adds one method this required some changes
	  to the xpi.XpiFile class, basically it uses a few methods and
	  iterators/in operator so should be simple to implement other
	  archive classes...

2004-09-30 11:36  davidfraser

	* misc/optrecurse.py: since splitinputext and splittemplateext are
	  the same in the baseclass, and useful, made splitext that does
	  that, and call it from them (splitinputext is overridden
	  sometimes for some reason)

2004-09-30 11:30  davidfraser

	* storage/xpi.py: added __iter__, __contains__, openinputfile,
	  openoutputfile methods used by convert  - that means it doesn't
	  have to know much about XpiFiles if no region is found, try and
	  get it automatically from the locale name only add dirmap entries
	  for valid locale and region took out unused code for renaming
	  (done in clone now)

2004-09-30 09:17  davidfraser

	* storage/oo.py: modified to produce lots of small files rather
	  than one per module...

2004-09-30 09:07  davidfraser

	* storage/oo.py: renamed "module" variables to "subfile" in
	  oomultifile added openfile method that uses wStringIO to create a
	  pseudo-file for a subfile

2004-09-29 17:57  davidfraser

	* convert/oo2po: added GSIConvertOptionParser, analogous to
	  XpiConvertOptionParser (and based on it) This allows treating a
	  GSI file as multiple files, using oo.oomultifile similar support
	  needed for the reverse process...

2004-09-29 17:20  davidfraser

	* storage/oo.py: added oomultifile class that can be used to treat
	  smaller sections of a file as individual oofiles

2004-09-29 16:32  davidfraser

	* convert/oo2po: added support for passing language parameters on
	  command line, TODO for making it work properly :-)

2004-09-28 14:12  davidfraser

	* convert/po2moz: added option to change locale, which restructures
	  directories etc inside xpi jars using new xpi.clone parameters
	  this is required for the round-trip xpi -> po -> xpi to work,
	  which is now complete extended warning when files not found in
	  structure

2004-09-28 14:10  davidfraser

	* storage/xpi.py: various changes needed to handle directory
	  structures when changing language names (removed TODOs) split
	  initdirmap into findlangreg and setlangreg move files directly in
	  xpi (not in a sub-jar) into a "package" directory added method
	  restructurejar which moves things from one lang-region to another
	  modified clone to reconstruct jars using restructurejar keep
	  locale and region as members

2004-09-28 12:21  davidfraser

	* tools/oosetupmerge: updated to handle languages list better

2004-09-28 12:10  davidfraser

	* storage/xpi.py: only print out the name when listing files...

2004-09-28 12:08  davidfraser

	* storage/html.py: added span as a text-marking tag

2004-09-28 12:06  davidfraser

	* __version__.py: version 0.8 beta 3

2004-08-31 17:48  davidfraser

	* convert/po2prop.py: added a little hook that will allow setting
	  strings to empty values by setting the msgstr to "   " (three
	  spaces)

2004-08-31 17:07  davidfraser

	* convert/dtd2po.py: fixed a bug where the logic for mixed entities
	  failed for merging dtds (basically the mixed entity was marked as
	  already merged when the original version was converted, so the
	  translation was ignored) this is fixed by using "mixbuckets" to
	  mark the alreadymerged value differently for orig and translation

2004-08-31 15:23  davidfraser

	* convert/: po2nb, nb2po: added fixes to handle end of lines sanely
	  only replace one instance of each string in the result when
	  converting back

2004-08-27 13:46  davidfraser

	* convert/po2html: only do a replace if the translation is
	  non-empty

2004-08-27 13:31  davidfraser

	* convert/html2po: strip html blocks

2004-08-27 13:10  davidfraser

	* convert/html2po: allow generation of .pot files

2004-08-27 13:07  davidfraser

	* convert/: nb2po, po2nb: updated nb2po to fit with new
	  storage.html handling of untaggeddata (part of normal blocks)
	  added usepots option to nb2po nb parts files are always htm, not
	  html - updated po2nb

2004-08-27 13:01  davidfraser

	* convert/html2po: added option to include untagged data

2004-08-27 12:52  davidfraser

	* convert/po2nb: added po2nb to translate nanoblogger part files
	  using po files

2004-08-27 12:26  davidfraser

	* storage/html.py: added code to include untagged data in the blogs
	  if desired added li as a valid marking tag

2004-08-27 12:10  davidfraser

	* convert/nb2po: added code to parse html and split up blocks with
	  a fair amount of intelligence removed unneccessary import of os
	  module

2004-08-27 11:54  davidfraser

	* convert/nb2po: added initial nb2po script for handling
	  nanoblogger files

2004-08-27 11:41  davidfraser

	* convert/html2po, storage/html.py: moved POHTMLParser from
	  convert/html2po to new storage/html.py module removed
	  unneccessary import of os module

2004-08-27 11:17  davidfraser

	* convert/: TODO, html2po: added TODO for oo2po removed notes about
	  po2html not existing...

2004-08-23 13:22  davidfraser

	* tools/ooswitchlang: need to import sys to get the arguments
	  later...

2004-08-18 12:25  davidfraser

	* tools/oosetupmerge: rather have a \n inserted before the field
	  name because this gives us the tab indentation we want

2004-08-18 12:06  davidfraser

	* tools/oosetupmerge: added code to localize module text (name,
	  description)

2004-08-18 11:59  davidfraser

	* tools/oosetupmerge: added code to insert HelpText Text(nn)
	  entries for each language - so installation Help is now localized
	  use one suffix variable per index instead of recalculating it
	  everywhere we can :-) to support inserting fields into sections,
	  added end of variables to tokennums index added methods to
	  renamefield, getfieldtokenrange, insertforeignvalue (just puts
	  index tokenrange in before end of section)

2004-08-17 11:46  davidfraser

	* tools/ooo_languageselector.png: added icon for ooo language
	  switcher on linux

2004-08-17 11:43  davidfraser

	* tools/oosetupmerge: allowed adding a file to zip without
	  specifying contents (otherwise file was removed) fixed file size,
	  date and time for zip changes check posix by looking at name of
	  setup file, not os.name (we pack on linux anyway)

2004-08-17 11:37  davidfraser

	* tools/ooswitchlang: added expat import to prevent problem in
	  singlefile version added code to look in directory program is
	  installed in in case not run from there

2004-08-17 09:38  davidfraser

	* tools/oosetupmerge: added setuplaunchscript, code to create it
	  for posix installers initialize members in constructor rather
	  than from mergefiles...  moved desktop entries code into method
	  adddesktopentries copy desktop files before generating
	  mainsetupfile (this is because we will need to change file
	  attributes...)

2004-08-17 09:21  davidfraser

	* tools/oosetupmerge: added TODO about HelpText

2004-08-17 09:07  davidfraser

	* tools/oosetupmerge: added code to add desktop / menu items with
	  icons for kde and gnome (and gnome2) this required entries to
	  access zip files the desktop entries are hardcoded and the icons
	  are generated from icons/ooo_languageselector.png under the
	  current directory

2004-08-16 13:35  davidfraser

	* tools/oosetupmerge: recursively rename a directory's child
	  directories...  this should fix templates not being included

2004-08-15 16:54  davidfraser

	* tools/ooswitchlang: check if there are any valid oo versions if
	  not, display a message and switch to advanced mode

2004-08-15 16:31  davidfraser

	* tools/ooswitchlang: moved xmlwrapper import to prevent expat
	  version conflict

2004-08-13 19:13  davidfraser

	* convert/oo2po: added TODOs

2004-08-12 11:42  davidfraser

	* tools/ooswitchlang: improved tooltip for adminchoice

2004-08-12 11:38  davidfraser

	* tools/ooswitchlang: changed adminchoice to be a drop down box.
	  moved above language selector added function getadminmode to work
	  out what it means

2004-08-12 11:29  davidfraser

	* tools/ooswitchlang: make sure we return after finding the current
	  directory, otherwise manual selection happens anyway...

2004-08-12 11:24  davidfraser

	* tools/ooswitchlang: added lots of error handling and intelligence
	  so user gets reasonable messages if language cannot be found /
	  set if registered version directory does not exist, ignore it
	  (with a verbose log message) rather than showing message factored
	  out finding directory in version names into separate function
	  findregisteredversion try to look up if manually entered
	  directory is one of registered versions

2004-08-11 18:38  davidfraser

	* convert/po2html: added simple po2html

2004-08-11 11:27  davidfraser

	* tools/oosetupmerge: added a shortisocode member for matching just
	  language (e.g. en-US -> en) check hostnames to rename on every
	  index, not just self. also check shortisocode

2004-08-11 10:54  davidfraser

	* tools/ooswitchlang: Sipedi is actually Sepedi - but have adopted
	  "Sesotho sa Leboa" - "Northern Sotho" as better term

2004-08-10 15:23  davidfraser

	* tools/ooswitchlang.ico: add oo switchlang icon

2004-08-10 15:12  davidfraser

	* misc/xmlwrapper.py: import expat to prevent conflicts with wx

2004-08-10 15:05  davidfraser

	* tools/ooswitchlang: changed error dialog titles

2004-08-10 15:04  davidfraser

	* tools/ooswitchlang: added more info about needing to restart,
	  changed title

2004-08-10 14:56  davidfraser

	* tools/ooswitchlang: Added lots of tooltips

2004-08-10 14:40  davidfraser

	* tools/ooswitchlang: changed language names to be in that
	  language. added TODO to handle languages better changed cmdline
	  to quote the binary name (otherwise on Windows it fails if in
	  Program Files)

2004-08-10 14:26  davidfraser

	* tools/oosetupmerge: added code to create shortcuts for windows
	  start menu added link to switch lang program

2004-08-10 12:00  davidfraser

	* tools/oosetupmerge: copy all the license, readme,
	  thirdpartlicense etc files into the dest directory with -nn in
	  their names (even do this for the main setup file as otherwise
	  people will wonder what it is...)

2004-08-10 11:42  davidfraser

	* tools/oosetupmerge: added function islocalizefile, which now
	  detects not only resource files but also README and LICENSE files

2004-08-10 09:15  davidfraser

	* convert/po2dtd.py: added note on \n characters

2004-08-10 09:12  davidfraser

	* convert/po2oo: putting in extra \ns was coming out in the oo
	  files, this is leftover stuff from mozilla, don't add any...

2004-08-06 14:21  davidfraser

	* tools/ooswitchlang: added docstrings, comments

2004-08-06 14:18  davidfraser

	* tools/ooswitchlang: made forcing the default tried to improve
	  labels...

2004-08-06 14:08  davidfraser

	* tools/ooswitchlang: added AutoSize method so we don't have to set
	  the size manually also it works when switching modes...  note we
	  use SetClientSize otherwise it is too small on Windows...

2004-08-06 13:49  davidfraser

	* tools/ooswitchlang: construct dirsizer in arrangeoptioncontrols
	  each time (otherwise segfaults. Clearing a BoxSizer destroys it)
	  Switch the advanced button label depending on self.advancedmode

2004-08-06 13:38  davidfraser

	* tools/ooswitchlang: added button to switch between simple and
	  advanced modes, made it work took optionssizer construction out
	  of arrangeoptioncontrols moved initial arrangeoptioncontrols call
	  to later in constructor

2004-08-06 13:25  davidfraser

	* tools/ooswitchlang: rearranged creation and arranging of option
	  controls into functions...  makes it much easier to read, and
	  will be able to switch modes hopefully...

2004-08-06 13:19  davidfraser

	* tools/ooswitchlang: started adding code to do simple / advanced
	  modes for the GUI...	added docstring and commandline option
	  parsing added option for starting in advanced mode

2004-08-05 19:18  davidfraser

	* tools/oosetupmerge: needs to be quoted empty string :-)

2004-08-05 18:42  davidfraser

	* tools/ooswitchlang: forget the xmlwrapper stuff :-) added
	  TODOs...

2004-08-05 18:38  davidfraser

	* tools/oosetupmerge: some files don't have a PackedName (they are
	  usually just being deleted so it doesn't matter, just leave
	  it...)

2004-08-05 17:35  davidfraser

	* convert/po2txt: added basic text wrapping

2004-08-05 17:24  davidfraser

	* storage/properties.py: don't decode unicode in comments

2004-08-05 17:19  davidfraser

	* misc/xmlwrapper.py: make life simpler by using
	  ElementTree.XMLTreeBuilder (the XMLTreeBuilder module is just a
	  backwards-compatibility wrapper)

2004-08-05 17:10  davidfraser

	* misc/quote.py: show the digits causing the problem...

2004-08-05 17:05  davidfraser

	* convert/po2txt, storage/po.py: made including escapes optional in
	  po.getunquotedstr don't include escapes for text files...

2004-08-05 16:41  davidfraser

	* convert/po2oo: added requirement for languagecode (otherwise we
	  produce bad target files...)

2004-08-05 16:35  davidfraser

	* convert/: po2txt, txt2po: created simple po2txt

2004-08-05 12:33  davidfraser

	* tools/ooswitchlang: try import xmlwrapper from the current
	  directory if import fails...

2004-08-05 12:11  davidfraser

	* tools/oosetupmerge: add -j option to zip so it doesn't include
	  the pathname added option --switchlang rather than including
	  ooswitchlang.exe if it is there

2004-08-05 11:33  davidfraser

	* tools/oosetupmerge: added offset param to makepackedname in case
	  more than one is needed removed direntry parameter for
	  addmanualfile as it can be deduced from baseentry zip generates
	  .zip files so rename them...

2004-08-05 11:22  davidfraser

	* tools/oosetupmerge: added self.manualfiles so any files added
	  manually are automatically zipped into the right destination
	  (currently using cmdline) added call to addfiletomodule so files
	  added manually are also listed in the modulename to be installed
	  added function makepackedname for when we need a new packedname
	  added default value option to getfieldvalue, rather than getting
	  errors added call to add ooswitchlang.exe to setup if it exists

2004-08-05 10:56  davidfraser

	* tools/oosetupmerge: use isocodes for directory names rather than
	  using HostName (which could be full lang name) this means all the
	  f* files have now got shorter names

2004-08-05 10:49  davidfraser

	* tools/oosetupmerge: refactored addfiletomodule to use a dummy
	  setup file rather than searching for commas...  this means we
	  don't have to leave out some files because we couldn't find the
	  commas also we don't require the index (which will make it easier
	  to add manual files)

2004-08-05 10:13  davidfraser

	* tools/oosetupmerge: factored out addfiletomodule from
	  addforeignfile rename aftersection parameter of addmanualfile to
	  baseentry

2004-08-05 09:59  davidfraser

	* tools/oosetupmerge: added addmanualfile method (adds a new
	  section describing a file off disk)	- to be used for adding gui
	  switchlang executable split off parsing code into base class
	  SetupParser this allows us to create a little SetupParser to
	  describe manual additions corrected dir arguments (one-off error
	  from sys.argv->optparser change)

2004-08-05 09:09  davidfraser

	* tools/ooswitchlang: changed setlanguage to take admin and force
	  as parameters setlanguage now displays errors and offers to force
	  only quit if setlanguage successful

2004-08-05 08:59  davidfraser

	* tools/ooswitchlang: Added Tswana Enlarged window

2004-08-05 08:50  davidfraser

	* tools/oosetupmerge: improved doc string use optparse for option
	  parsing added version info

2004-08-05 08:33  davidfraser

	* tools/oosetupmerge: use directory names rather than setup files
	  as arguments copy other needed files (non-f*, non-setup.in[sf])

2004-08-04 12:08  davidfraser

	* tools/ooswitchlang: added browse button for selecting install dir
	  tried to improve sizing...

2004-08-04 11:39  davidfraser

	* tools/ooswitchlang: added instructions for building exe...

2004-08-04 10:22  davidfraser

	* tools/ooswitchlang: add box for install directory include
	  "(other)" for manually chosen directory...

2004-08-04 10:21  davidfraser

	* tools/oosetupmerge: try import on sparse and import directly if
	  not in translate.misc - to allow standalone oosetupmerge also add
	  basic commandline help...

2004-08-02 22:02  dwaynebailey

	* tools/TODO: Ideas for: - podiff - glossary creator

2004-08-02 22:01  dwaynebailey

	* misc/: optrecurse.py, progressbar.py: Improved naming of progress
	  bar types

2004-08-02 21:57  dwaynebailey

	* convert/: convert.py, html2po, moz2po, txt2po: Improved usage
	  messages

2004-08-02 21:34  dwaynebailey

	* convert/oo2po: Improved purpose message

2004-07-30 14:09  davidfraser

	* tools/ooswitchlang: fix up errors on windows - file:///x:/ ends
	  up with an initial \\x:\\ in the path os.path.samefile not
	  available on windows, just use equality

2004-07-30 13:21  davidfraser

	* tools/ooswitchlang: added code to handle multiple versions
	  installed, use .sversionrc or sversion.ini to find versions use
	  current directory or parent directory as well

2004-07-29 13:44  davidfraser

	* tools/ooswitchlang: call setofficelang directly (simpler) added
	  ability to force it added size for window

2004-07-29 13:38  davidfraser

	* tools/ooswitchlang: added begin/end busy cursors so people know
	  we're trying to set the language...

2004-07-29 13:30  davidfraser

	* tools/ooswitchlang: added check box to select whether to set the
	  admin language or not update the current language when the admin
	  check box is changed redid the sizing so that it works well for
	  more than one option

2004-07-29 13:16  davidfraser

	* tools/ooswitchlang: simplified wx sizing

2004-07-29 12:51  davidfraser

	* tools/ooswitchlang: added code to call setofficelang with
	  available options and deal with the return code this is better
	  than changing xml files ourselves...	added function to get/set
	  admin language

2004-07-29 12:36  davidfraser

	* tools/ooswitchlang: added a higher level to manage user / admin
	  settings (will use setofficelang.bin as well...)

2004-07-29 12:28  davidfraser

	* tools/ooswitchlang: added tool for switching oo installation
	  language (in progress)

2004-07-28 15:26  davidfraser

	* storage/xpi.py: combine iterjarcontents into initdirmap (so later
	  we can intelligently handle the jar names...)

2004-07-28 12:08  davidfraser

	* misc/xmlwrapper.py: added makefixtagproc which can be used to set
	  specific names for namespaces when rewriting file (by replacing
	  ElementTree.fixtag) also added some excludetags capability to
	  ignore certain plaintext/children...

2004-07-22 13:03  davidfraser

	* convert/sxw2po: added special code to exclude change tracking
	  stuff from the sxw file

2004-07-22 12:43  davidfraser

	* convert/sxw2po: added sxw2po

2004-07-22 12:38  davidfraser

	* convert/: html2po, txt2po: fixed UTF8 -> UTF-8 (official name
	  that msguniq likes)

2004-07-22 12:37  davidfraser

	* misc/xmlwrapper.py: added xml wrapper

2004-07-16 22:11  davidfraser

	* tools/oosetupmerge: exclude non-alpha isocodes from
	  ooSetupLocales

2004-07-16 15:27  davidfraser

	* tools/oosetupmerge: added keymunging so en-US gets changed to
	  en_US also removed extra _ before suffix

2004-07-16 14:28  davidfraser

	* tools/oosetupmerge: disable updating the Languages field as
	  support for language names in the setup selection list is
	  currently limited

2004-07-16 13:29  davidfraser

	* tools/oosetupmerge: set the list of installed languages manually
	  (rather than using default template system that doesn't work)

2004-07-16 13:08  davidfraser

	* tools/oosetupmerge: added code to merge config items ...  this
	  fixes for example New->Text Document always being in the same
	  language

2004-07-16 12:46  davidfraser

	* tools/: oosetup, oosetupmerge: renamed oosetup to oosetupmerge

2004-07-16 12:38  davidfraser

	* tools/oosetup: minor change that will make changing the
	  packedname easier...

2004-07-14 17:48  davidfraser

	* storage/xpi.py: converted commonprefix code to make a more
	  intelligent map based on locale directories...  locale/nn-NN gets
	  mapped to lang-reg locale/NN gets mapped to reg also changed
	  directory creation so we don't create unneccessary directories
	  like this added a showprefix option which currently lists the
	  maps determined (for debugging)

2004-07-09 16:34  dwaynebailey

	* filters/TODO: Adding HTML and email checker todo item

2004-07-09 15:51  davidfraser

	* storage/dtd.py: removed <!ENTITY xxx > definitions that have been
	  commented out (will only work with single line definitions...)

2004-07-09 15:50  davidfraser

	* misc/quote.py: make stripcomment handle half-comments more
	  intelligently (if comment is split over lines) in
	  extractwithoutquotes, be careful if laststartinextracted is still
	  None...  this produced a memory grabbing frenzy from psyco (as
	  will ''[:None])

2004-07-09 15:13  dwaynebailey

	* filters/TODO: Wihslist XML/HTML checks

2004-07-09 14:30  davidfraser

	* filters/decoration.py: factored out isvalidaccelerator...

2004-07-09 14:26  davidfraser

	* filters/pofilter: made listfilters work even though input is not
	  given (had to use a callback to do this...)

2004-07-09 12:09  davidfraser

	* misc/optrecurse.py: improved psyco importing logic, added
	  excluded function encodings.search_function

2004-07-09 11:54  davidfraser

	* convert/po2moz: added fix for non-recursive templates (single
	  file usage)

2004-07-08 17:03  davidfraser

	* storage/xpi.py: added compression to XPI files by default...

2004-07-08 16:10  davidfraser

	* convert/convert.py, filters/pofilter, filters/pogrep: added
	  usepsyco option to run methods where neccessary...

2004-07-08 16:07  davidfraser

	* misc/optrecurse.py: added options to use psyco for speedup.
	  print a warning message if its asked for but not available can be
	  set to none/full/profile

2004-07-08 15:36  davidfraser

	* convert/po2moz: added message about writing xpi file as it can
	  take a while more intelligence about single file / stdout output

2004-07-08 15:31  davidfraser

	* convert/convert.py: don't close copied files if the output is to
	  a tty

2004-07-08 15:20  davidfraser

	* misc/zipfileext.py: removed unneccessary flush from writeendrec

2004-07-08 14:47  davidfraser

	* misc/wStringIO.py: only update the length after writing if we've
	  written over the end of the file

2004-07-08 13:01  davidfraser

	* misc/optrecurse.py: added requireemnt to use - for stdin input
	  instead of leaving it out this lets us give a more helpful error
	  message if no options given at start...

2004-07-07 18:10  davidfraser

	* convert/dtd2po.py: added TODO to remind us about losing
	  comments...

2004-07-07 18:05  davidfraser

	* convert/dtd2po.py: modified to exclude blank elements...

2004-07-07 17:40  davidfraser

	* tools/detectencoding: changed default output to utf-8

2004-07-07 17:39  davidfraser

	* convert/oo2po: changed to utf-8 for output.  this actually
	  reflects what we were doing anyway...

2004-07-07 17:28  davidfraser

	* convert/: html2po, prop2po.py, txt2po: removed unneccessary pot
	  cruft

2004-07-07 17:20  davidfraser

	* convert/: dtd2po.py, html2po, prop2po.py, txt2po: make pot file
	  headers say charset=utf8 (and make sure encoding is 8bit too)
	  otherwise gettext tools etc will complain about non-ASCII
	  characters

2004-07-07 17:08  davidfraser

	* storage/properties.py: escape control characters in comments...

2004-07-07 17:07  davidfraser

	* misc/quote.py: separated out propertyescapes (renamed from
	  escapes) and controlchars dicts from mozillapropertiesdecode
	  added an escapecontrols method

2004-07-07 15:17  davidfraser

	* convert/po2prop.py: handle the new escaping produced by prop2po -
	  we want \n to come through normally, but not \quotes or \\u...

2004-07-07 15:09  davidfraser

	* convert/prop2po.py: changed method of escaping strings for po
	  files

2004-07-07 14:51  davidfraser

	* misc/quote.py: mozilla properties stufF: don't convert control
	  characters to full representation (po converter can do that where
	  it wants) added controlchars dict to make looking up controlchars
	  easier (currently they all map to themselves but this could be
	  changed)

2004-07-07 12:51  davidfraser

	* misc/sparse.py: added suport for having a different closing quote
	  to starting quote character

2004-07-07 12:38  davidfraser

	* misc/quote.py: keep all the control characters escaped

2004-07-07 12:29  davidfraser

	* storage/properties.py: strip eols from comments and put a
	  standard \n on

2004-07-05 17:07  davidfraser

	* tools/oosetup: added dialing code as an attribute added resource
	  files handling...

2004-07-05 16:30  davidfraser

	* tools/oosetup: set languagename and isocode as attributes...
	  work out which directories should be renamed based on HostName,
	  not gid

2004-07-05 16:04  davidfraser

	* tools/oosetup: found the cause for missing files, trouble
	  locating packedsection:  was using straight copy for sections,
	  so the tokennums child dictionary was having values overwritten.
	  fixed by using deepcopy.  removed unneccessary error handling...
	  simplified printout to only print changed file names

2004-07-05 14:57  davidfraser

	* tools/oosetup: added directory entry copying (otherwise files
	  didn't have the corresponding directory section, giving script
	  errors)

2004-07-05 13:43  davidfraser

	* tools/oosetup: refactored adding a foreign file into a method
	  some pychecker cleanups...

2004-07-05 13:37  davidfraser

	* tools/oosetup: added code to modify the lists of files in Modules
	  to add new files...  changed printout to make it less verbose for
	  copying files...

2004-07-02 22:53  davidfraser

	* tools/oosetup: added code to copy files to a destination
	  directory, renaming as neccessary some problems with finding the
	  PackedName need to be fixed

2004-07-02 22:10  davidfraser

	* tools/oosetup: added files from other indexes into main file,
	  rename all relevant files changed token finding to handle token
	  changes improved tokenrange work took out demo of foreign stuff
	  as its being used now

2004-07-02 19:25  davidfraser

	* tools/oosetup: refactored parsing of section into separate
	  function   remember tokennums relative to start (renamed from
	  type)   remember end tokennum relative to start modified
	  getsource to allow start and end token numbers added method
	  insertforeignsection to allow copying sections from another index
	  modified getsource to add in inserted sections (using
	  foreignindex.getsource) added code to remember which files belong
	  in which directory added a simple demo of insertforeignsection
	  for testing

2004-07-02 18:26  davidfraser

	* tools/oosetup: redid parsing to handle newline, nesting, ; etc
	  correctly added initial code to merge setup files, do renaming of
	  directories

2004-07-02 16:50  davidfraser

	* tools/oosetup: added tool for dealing with openoffice
	  setup.ins/inf scripts

2004-07-01 20:42  dwaynebailey

	* tools/TODO: Add TODO items

2004-07-01 17:31  davidfraser

	* convert/txt2po: improved logic so blank lines don't end up at
	  start of text

2004-07-01 12:49  davidfraser

	* convert/txt2po: made txt2po do blocks instead of lines

2004-06-30 22:44  davidfraser

	* misc/optrecurse.py: don't try and remove stdout!

2004-06-30 22:35  davidfraser

	* filters/checks.py: added missing comma (made endwhitespace and
	  startpunc not have precondition)

2004-06-30 22:25  davidfraser

	* filters/checks.py: added ${ } variable matcher for openoffice

2004-06-30 14:50  davidfraser

	* filters/checks.py: should call funcmatch, not funcsmatch, when
	  passing a single function

2004-06-30 14:45  davidfraser

	* filters/prefilters.py: changed to use new expanded tokenize
	  function so parser.source gets set correctly

2004-06-30 14:34  davidfraser

	* misc/sparse.py: added option to give tokenizers to tokenize (so
	  self.source gets set)

2004-06-29 21:13  davidfraser

	* filters/prefilters.py: fixed old-style findtokenpos call

2004-06-29 16:32  davidfraser

	* filters/TODO: need to use unicode strings otherwise we can split
	  up multibyte characters in checks...

2004-06-29 16:18  dwaynebailey

	* tools/pocount: Untranslated words was incorrectly counting the
	  msgstr instead of the msgid

2004-06-29 16:16  dwaynebailey

	* tools/TODO: Need to be able to merge fuzzy status back to mack
	  strings fuzzy or to unset fuzzy status

2004-06-29 15:29  dwaynebailey

	* convert/TODO: Adding to TODO need for csv2po to have a charset
	  option to set po header charset.

2004-06-29 14:29  davidfraser

	* convert/html2po: initial html2po

2004-06-29 13:54  davidfraser

	* convert/txt2po: added txt2po tool

2004-06-29 11:37  davidfraser

	* filters/TODO: accelerators are done

2004-06-29 11:16  davidfraser

	* filters/checks.py: renamed self.accelerators to self.accelmarkers
	  to prevent it from hiding the accelerators check method

2004-06-25 17:40  davidfraser

	* storage/csvl10n.py: limited quotechars to " (no ' in files from
	  translators) added intelligence to patch together partial quoting
	  (probably not neccessary)

2004-06-25 17:37  davidfraser

	* convert/csv2po, filters/prefilters.py: updated to new sparse API

2004-06-25 17:36  davidfraser

	* misc/sparse.py: updated to a new object-based API all functions
	  available inside new StringParser object requires changes to any
	  code using this!

2004-06-24 15:42  davidfraser

	* storage/csvl10n.py: added SimpleDictReader which unlike the csv
	  module doesn't have problems with newlines

2004-06-23 14:17  davidfraser

	* misc/csv.py: updated to handle keyword arguments

2004-06-16 19:05  dwaynebailey

	* filters/TODO: Check for accelerators

2004-06-09 18:45  davidfraser

	* ChangeLog: changed to standard cvs2cl ChangeLog so I don't have
	  to edit it...

2004-06-09 18:14  davidfraser

	* __version__.py: version 0.8 beta 2

2004-06-09 18:13  davidfraser

	* filters/pofilter, storage/po.py: added a switch to getunquotedstr
	  for linebreak inclusion, turn it off for pofilter (still unclear
	  as to long-term strategy:-) )

2004-06-09 17:55  davidfraser

	* convert/po2dtd.py, misc/quote.py: remove all leftover doencode
	  stuff

2004-06-09 17:49  davidfraser

	* misc/optrecurse.py: added more sensible error handling for
	  missing output directories - try create the directory, report an
	  error if it fails

2004-06-09 17:38  davidfraser

	* convert/TODO: encodings are now utf8 which is better...
	  properties encodings have been converted as well

2004-06-09 17:36  davidfraser

	* convert/moz2po: include non-jar files in extraction for moz2po
	  ... otherwise we miss install.js

2004-06-09 17:02  davidfraser

	* filters/checks.py: added long, split whitespace into start/end

2004-06-09 16:55  davidfraser

	* convert/convert.py: get optparse from the optrecurse namespace
	  (also others can access it here)

2004-06-09 16:42  davidfraser

	* misc/quote.py: added implementation for \N{name} unicode escaping
	  for completion

2004-06-09 16:17  davidfraser

	* misc/quote.py: only keep \t and \n when decoding mozilla
	  properties files

2004-06-09 15:04  davidfraser

	* misc/quote.py: rewrote mozillapropertiesdecode based on the C
	  unicode-escape source this lets us change some of the behaviour
	  (e.g. how we handle control characters)

2004-06-09 11:06  davidfraser

	* filters/checks.py: added doublespacing and puncspacing checks...

2004-06-09 11:01  davidfraser

	* filters/helpers.py: use operator.and_ instead of int.__and__ to
	  and a whole lot of expressions together

2004-06-09 10:41  davidfraser

	* filters/decoration.py: don't tread periods that don't have
	  following digits as part of the number added TODO for
	  locale-specific delimiters (2,5 for Afrikaans)

2004-06-09 10:31  davidfraser

	* misc/optrecurse.py: show progress regardless of success

2004-06-08 17:17  davidfraser

	* filters/TODO: preconditions are there now...

2004-06-08 17:03  davidfraser

	* filters/checks.py: added ability to have preconditions - don't do
	  most checks if untraslated...

2004-06-08 16:44  davidfraser

	* filters/: checks.py, pofilter: moved all the arguments,
	  construction of list of filters into pocheckfilter constructor
	  general refactoring to try do as much as possible once only

2004-06-08 16:13  davidfraser

	* tools/pomerge: .msg.I15348

2004-06-08 16:08  davidfraser

	* convert/: csv2po, dtd2po.py, moz2po, oo2po, po2csv, po2dtd.py,
	  po2moz, po2oo, po2prop.py, poreplace.py, prop2po.py: modified all
	  the scripts to work with new convert parameters based on
	  translate.misc.optrecurse

2004-06-08 16:07  davidfraser

	* filters/: pofilter, pogrep: redid btis of pofilter and pogrep to
	  work with new translate.misc.optrecurse (filtercmd is gone... bye
	  bye)

2004-06-08 16:01  davidfraser

	* tools/detectencoding: minor fixups for when no matches are
	  found...

2004-06-08 15:56  davidfraser

	* misc/optrecurse.py, convert/convert.py, filters/filtercmd.py:
	  refactored common code out of convert/convert.py and
	  filter/filtercmd.py into misc/optrecurse.py this now handles
	  everything cleanly. filter/filtercmd is no longer neccessary, has
	  been removed some specialisation and parameters have also
	  changed, and will affect other files...   recursiveoptions /
	  convertparameters have been renamed to self.passthrough   all the
	  convert parameter/method names have changed to process   there is
	  a new simpler run method which parses the args and passes them to
	  recursiveprocess

2004-05-28 15:48  davidfraser

	* tools/pomerge: added mergeblanks option refactored option
	  checking into str2bool removed unneccessary default options

2004-05-28 15:42  davidfraser

	* tools/pomerge: added option to control merging comments

2004-05-28 15:10  dwaynebailey

	* tools/pocount: Changed wording on output slightly to make it
	  clear that fuzzies wordcount is for the original message

2004-05-28 15:00  davidfraser

	* tools/pocount: redid counting to count everything on elements
	  rather than counting first and summarizing later makes it a bit
	  slower but better...	also added code to count fuzzy strings /
	  words

2004-05-25 18:37  davidfraser

	* storage/properties.py: use new quote function to decode

2004-05-25 17:31  davidfraser

	* misc/quote.py: added a mozillapropertiesdecode function which
	  does unicode-escape but doesn't transform \\n

2004-05-25 16:43  davidfraser

	* storage/po.py: added option whether to merge comments or not in
	  merge make sure that a blank string with a msgid_comment works
	  properly

2004-05-25 16:41  davidfraser

	* convert/dtd2po.py: only convert elements with valid entities...

2004-05-25 15:38  davidfraser

	* tools/pomerge: added docstring to help

2004-05-25 15:31  davidfraser

	* convert/dtd2po.py: added comment if field looks like a
	  height/width/size field, to help translators changed blank
	  comment to not have \n at end...

2004-05-25 15:07  davidfraser

	* convert/convert.py: if there is an error in conversion, give a
	  warning with the names of the files before raising it made
	  warning always start on newline by adding \n at beginning

2004-05-25 12:10  davidfraser

	* convert/: convert.py, csv2po, dtd2po.py, moz2po, oo2po, po2csv,
	  po2dtd.py, po2moz, po2oo, po2prop.py, prop2po.py: added
	  descriptions for command line help using doc strings

2004-05-25 11:42  davidfraser

	* README: added a link to the docs page

2004-05-25 11:15  davidfraser

	* convert/: po2dtd.py, po2moz, po2prop.py: removed all checking
	  code as this is now done in the filters area, not when converting

2004-05-21 19:15  davidfraser

	* ChangeLog: added changelog for 0.8b1

2004-05-21 19:00  davidfraser

	* convert/po2prop.py: .msg.wC8765

2004-05-21 18:58  davidfraser

	* __version__.py: version 0.8 beta 1

2004-05-21 18:49  davidfraser

	* misc/quote.py: removed escapeunicode and unescapeunicode

2004-05-21 18:49  davidfraser

	* convert/: po2prop.py, prop2po.py: removed
	  escapeunicode/unescapeunicode changed lineending encoding in
	  po2prop handle multiple lines in prop2po

2004-05-21 18:19  davidfraser

	* convert/: dtd2po.py, po2dtd.py, po2moz, po2prop.py, prop2po.py:
	  added option to po2dtd and po2moz to not run entity and size
	  checks fixed filename display for checks changed all leftover
	  ConvertOptionParserExt to ConvertOptionParser

2004-05-21 18:01  davidfraser

	* convert/: dtd2po.py, prop2po.py: set charset, encoding in po
	  output if not a pot file

2004-05-21 17:59  davidfraser

	* storage/po.py: added a utf8encode method, encode all unicode
	  strings as utf8

2004-05-21 17:53  davidfraser

	* convert/po2prop.py: do proper mozilla-properties encoding on
	  po2prop output (for \unnnn strings) fix reference to old
	  converter class...

2004-05-21 17:51  davidfraser

	* storage/properties.py: un-escape unicode-escaped \unnnn strings
	  on input, re-escape them on output

2004-05-21 17:50  davidfraser

	* misc/quote.py: added function to encode a string for a mozilla
	  (java-style) properties file (we can decode with "unicode-escape"
	  encoding, but encoding with this gives \xnn instead of \unnnn)

2004-05-21 11:56  davidfraser

	* misc/wStringIO.py: fixed basestring (python2.3 only) -> (str,
	  unicode) (works on python2.2)

2004-05-21 11:48  davidfraser

	* storage/dtd.py: fixed creation of blank entities for blank lines
	  at end of file set entity to None initially, detect this with
	  isnull added comments to dtdelement class

2004-05-21 11:24  davidfraser

	* convert/convert.py: refactored po/pot selection algorithm added a
	  helper function "potifyformat" to deal with both .po and .xxx.po
	  (for mozilla) instead of using self.inputformats,
	  self.outputoptions, added functions filterinputformats and
	  filteroutputoptions these use options.pot to rename formats as
	  required the results are stored in options.inputformats,
	  options.outputoptions which are then used to determine names
	  instead of self.inputformats, self.outputoptions also changed
	  getformathelp so it doesn't actually modify the format
	  dictionaries...

2004-05-20 20:22  dwaynebailey

	* convert/dtd2po.py: For msgid's that are blank a correct KDE style
	  translator comment must end with a literal \n followed by \n ir
	  \\n\n

2004-05-19 13:37  davidfraser

	* convert/po2oo: made languagecode a convertparameter so it gets
	  passed through...

2004-05-14 16:27  davidfraser

	* filters/checks.py: removed unneccessary sparse import

2004-05-11 17:56  davidfraser

	* storage/xpi.py: changed to use wStringIO wrapper for cStringIO

2004-05-11 17:52  davidfraser

	* misc/wStringIO.py: added wrapper for cStringIO so we can speed up
	  StringIO operations

2004-05-11 17:35  davidfraser

	* misc/zipfileext.py: don't need to write the endrec after a delete
	  neccessarily...

2004-05-11 16:47  davidfraser

	* storage/xpi.py: use zipfileext enhancements to overwrite files
	  inside zip files (removed TODO) use fix to StringIO to make sure
	  truncate works for jar files stored in a StringIO...	only
	  rewrite jar files if they've been changed... but catch their new
	  value if they have test included jar files when testing the zip

2004-05-11 16:41  davidfraser

	* misc/zipfileext.py: added zipfileext which contains code to
	  delete files in zipfiles, replace them, etc

2004-05-11 11:59  davidfraser

	* storage/xpi.py: added spacing between functions

2004-05-10 18:57  davidfraser

	* convert/po2moz: if you don't close the outputxpi you never get
	  the output...  this now actually produces an xpi with
	  translations the paths still need to be fixed up though...

2004-05-10 18:50  davidfraser

	* convert/: convert.py, po2moz: tried to add more intelligence to
	  close files and not use temp files in po2moz (but use StringIO
	  rather than stdout for misplaced files)

2004-05-10 18:38  davidfraser

	* convert/: Makefile, TODO, convert.py, moz2po, po2moz: added
	  ability to write xpi files from po2moz (not complete)   major
	  changes to po2moz to support this   use recurseconversion to read
	  in the files rather than recurseinputfiles   added xpi file
	  creation...  renamed checksubdir in convert to checkoutputsubdir,
	  pass options instead of options.output made gettemplatename
	  handle inputname=None (for stdin) etc handle IndexErrors when
	  trying to map paths to xpi file added test for po2moz writing
	  .xpi changed TODO - can now handle non-dtd/properties files

2004-05-10 17:44  davidfraser

	* convert/: Makefile, convert.py, moz2po, po2moz: added ability to
	  handle wildcards in convert for extensions ("*" matches anything)
	  added ability to po2moz, moz2po to handle non-dtd, non-properties
	  files by copying them added ability to po2moz to handle xpi files
	  for templates   - po2moz now has a MozConvertOptionParser like
	  moz2po does, but it does some different stuff renamed methods
	  recursefiles to recurseinputfiles, etc in convert made convert
	  methods return lists instead of yielding generators added
	  copyinput, copytemplate methods to convert that can be used to
	  copy files

2004-05-10 17:34  davidfraser

	* convert/po2prop.py: changed xreadlines to readlines so it can
	  work on StringIO from xpi

2004-05-10 16:31  davidfraser

	* convert/moz2po: moved inputxpi, templatexpi generation to
	  recursefiles started updating to name files dtd.po, properties.po
	  instaed of plain .po

2004-05-10 16:28  davidfraser

	* convert/convert.py: made splitinputext, splittemplateext methods
	  to split the extension and replace the .

2004-05-10 16:19  davidfraser

	* storage/po.py: added an overwrite parameter to merge that allows
	  overwriting existing msgstr...

2004-05-10 16:18  davidfraser

	* tools/pomerge: overwrite msgstr in target regardless...

2004-05-10 15:50  dwaynebailey

	* filters/: checks.py, pofilter: Add --kde to handle KDE specific
	  accelerators and variables

2004-05-10 15:49  dwaynebailey

	* convert/TODO: Add .properties UTF<->escaped unicode to wish list

2004-05-10 15:20  davidfraser

	* convert/: moz2po, convert.py: removed unneccessary imports of
	  optparse from moz2po also added warning method to convert so
	  import sys in moz2po is unneccessary

2004-05-07 17:15  davidfraser

	* convert/TODO: added some more TODOs

2004-05-07 16:54  davidfraser

	* convert/Makefile: added missing test from moz2po suite

2004-05-07 16:54  davidfraser

	* tools/pomerge: converted podiff and pomerge to use new output
	  syntax (and handle any combinatino of po, pot)

2004-05-07 16:52  davidfraser

	* convert/: csv2po, dtd2po.py, oo2po, po2csv, po2dtd.py, po2moz,
	  po2oo, po2prop.py, poreplace.py, prop2po.py: updated all
	  conversion scripts to use new formats syntax

2004-05-07 16:50  davidfraser

	* convert/moz2po: converted moz2po to work with new format system
	  (see convert.py)

2004-05-07 16:49  davidfraser

	* convert/convert.py: overhauled the handling of input and output
	  formats in convert this allows more sanity and flexibility
	  basically formats expects a dictionary with keys either as
	  inputformats or (inputformat, templateformat) tuples and values
	  as tuples of (outputformat, convertmethod) this obliviates the
	  need of ConvertOptionParseExt

2004-05-07 15:57  davidfraser

	* tools/pocount: added pocount tool

2004-05-07 15:18  davidfraser

	* filters/pofilter: don't skip over fuzzy elements...

2004-05-07 15:06  davidfraser

	* filters/pofilter: added includefuzzy option to runpofilter (left
	  out when adding option)

2004-05-07 14:57  davidfraser

	* filters/pofilter: added code to include fuzzy elements

2004-05-07 14:51  davidfraser

	* storage/xpi.py: added code to prevent generating an error if a
	  directory is present that doesn't match commonprefix (currently
	  happens in moz1.0/langengb.xpi)

2004-05-07 14:45  davidfraser

	* __version__.py: version 0.8 prerelease time

2004-05-07 14:42  davidfraser

	* convert/convert.py, filters/filtercmd.py, misc/progressbar.py:
	  removed curses progress option throughout (it never worked)

2004-05-07 14:36  davidfraser

	* convert/: dtd2po.py, moz2po, prop2po.py: added support for
	  blanking msgstr when -P|--pot option is given

2004-05-04 17:57  davidfraser

	* convert/: moz2po, po2moz: took out unneccessary imports

2004-05-04 17:53  davidfraser

	* convert/convert.py: added code to prevent usage of older versions
	  of optparse that can be installed alongside python 2.2

2004-05-04 17:12  davidfraser

	* storage/xpi.py: added clone method for xpi, and TODO to work out
	  how to write without appending

2004-05-04 16:38  davidfraser

	* storage/xpi.py: converted to only use StringIO as cStringIO Input
	  streams are unwriteable added CatchPotentialOutput class which is
	  an InputStream that can become an OutputStream always add files
	  to potentialsave, only actually add them if not already there
	  open jarfiles in the same mode as the xpi (mostly to allow append
	  to function) open jarfiles as CatchPotentialOutput streams when
	  planning to use them for input

2004-05-04 15:26  davidfraser

	* storage/xpi.py: make sure commonprefix doesn't swallow up a whole
	  file changed default extractdir to prevent errors...

2004-05-04 15:14  davidfraser

	* storage/xpi.py: added funky code to prevent funky error (if close
	  is called from __del__ it can't see the class or anything except
	  for self) all explained nicely in comments

2004-05-04 14:03  davidfraser

	* storage/xpi.py: create directories if required in extraction

2004-05-04 13:46  davidfraser

	* storage/po.py: allow display of a blank po entry if it has
	  msgidcomments...

2004-05-04 13:43  davidfraser

	* convert/dtd2po.py: add a comment to explain an original being
	  blank (this prevents it from being an invalid po file)

2004-05-04 13:08  davidfraser

	* convert/convert.py: fixed missing case for stdin input

2004-05-04 12:56  davidfraser

	* convert/prop2po.py: fixed ... was trying to extend list with a
	  string so came out wierd...

2004-05-04 11:00  davidfraser

	* storage/xpi.py: added TODOs to redo file mapping

2004-05-04 09:50  davidfraser

	* convert/convert.py: rearranged setpotoption logic, forget about
	  input/outputformats

2004-04-30 18:22  davidfraser

	* storage/xpi.py: added doc strings for new classes

2004-04-30 18:15  davidfraser

	* storage/xpi.py: added some initial work at outputting xpis (all
	  about catching close events for inner zip files) some conversion
	  to newstyle classes

2004-04-30 17:18  davidfraser

	* convert/moz2po: check that fileoption is a string before we check
	  if it looks like an xpi filename (to avoid doing this to lists)

2004-04-30 17:15  davidfraser

	* convert/convert.py: added code to handle multiple input files as
	  a list (and find a common directory for them)

2004-04-30 16:52  davidfraser

	* convert/moz2po: removed TODO about importing translations, as can
	  be done using templates

2004-04-30 16:33  davidfraser

	* convert/convert.py: improved usage string by rearranging order,
	  adding parameters for optionality (only affects usage string)
	  required giving inputformats and outputformats to setpotoption as
	  not set on self yet

2004-04-30 16:24  davidfraser

	* convert/: Makefile, convert.py: added code to handle input and
	  output parameters without needing -i/-o (decided it was better in
	  runconversion than recurseconversion, so put it there and changed
	  args)

2004-04-30 16:05  davidfraser

	* tools/pomerge: use new simpler parser.runconversion() to run the
	  operation

2004-04-30 16:00  davidfraser

	* convert/: convert.py, csv2po, dtd2po.py, moz2po, oo2po, po2csv,
	  po2dtd.py, po2moz, po2oo, po2prop.py, poreplace.py, prop2po.py:
	  updated runconversion to handle the options and argument parsing
	  and error handling moved recursive checking logic into
	  recurseconversion added args to recurseconversion options (can
	  maybe use for input/output params) removed extraneous import from
	  poreplace.py

2004-04-30 15:38  davidfraser

	* convert/: TODO, oo2po: oo2po: used new convertparameters
	  attribute to pass the pot option through to convertoo TODO: took
	  out TODO for recursion

2004-04-30 15:27  davidfraser

	* tools/pomerge: removed recursion option, since it is now detected
	  automatically

2004-04-30 15:27  davidfraser

	* convert/: Makefile, convert.py, csv2po, dtd2po.py, moz2po, oo2po,
	  po2csv, po2dtd.py, po2moz, po2oo, po2prop.py, poreplace.py,
	  prop2po.py: totally removed recursive options since all this is
	  now done automatically...

2004-04-30 15:15  davidfraser

	* convert/: convert.py, moz2po: simplified handling of recursion on
	  output and templates (set option.recursivexxx and check in
	  getfullxxxpath rearrange xpi handling on moz2po so runconversion
	  doesn't have to be overridden.

2004-04-30 14:51  davidfraser

	* convert/: convert.py, moz2po: tried to improve intelligence of
	  recursion detection (recurse iff the input is a directory) allow
	  specifying input and output files, going through same method as
	  if recursing a directory replaced inputisxpi and templateisxpi in
	  moz2po with isxpi

2004-04-29 17:31  davidfraser

	* convert/Makefile: changed all dirs to ?= so they can be
	  overridden

2004-04-29 17:24  davidfraser

	* convert/convert.py, storage/xpi.py: replaced os.path.sep,
	  os.path.extsep with os.sep, os.extsep for python2.2 compat

2004-04-29 17:19  davidfraser

	* convert/convert.py, filters/filtercmd.py: changed basestring to
	  (str, unicode) for python2.2 compatibility

2004-04-29 17:17  davidfraser

	* convert/moz2po: added __future__ for python 2.2 compatibility

2004-04-29 17:13  davidfraser

	* filters/filtercmd.py, storage/xpi.py, convert/convert.py: added
	  from __future__ import generators to files using yield, for
	  python 2.2 compatibility

2004-04-24 12:50  davidfraser

	* ChangeLog: added changelog for 0.7.1

2004-04-24 11:34  davidfraser

	* ChangeLog: Added ChangeLog for 0.7

2004-04-24 10:44  davidfraser

	* __version__.py: version 0.7.1

2004-04-24 10:44  davidfraser

	* convert/Makefile: removed .py from files that have been renamed

2004-04-23 23:04  davidfraser

	* storage/xpi.py: added crucial missing link in ospathexists...

2004-04-23 22:57  davidfraser

	* storage/po.py: in merge, merge comments rather than adding them
	  to avoid duplicates tried to improve fuzziness algorithm in merge

2004-04-23 22:55  davidfraser

	* storage/xpi.py: added options to treat xpi.py like an unzip
	  program...

2004-04-23 22:54  davidfraser

	* tools/pomerge: used po merge method instead of doing it
	  ourselves...

2004-04-23 22:52  davidfraser

	* ChangeLog: added ChangeLog from 2004-03-31

2004-04-23 22:50  davidfraser

	* __version__.py: version 0.7

2004-04-23 22:49  davidfraser

	* convert/: csv2po, csv2po.py, oo2po, oo2po.py, po2csv, po2csv.py,
	  po2oo, po2oo.py: renamed oo2po, po2oo, csv2po, po2csv from .py
	  files to scripts without .py extension

2004-04-23 16:57  davidfraser

	* tools/pomerge: added support for using .pot files as templates
	  took out obsolete runconversion argument

2004-04-23 16:38  davidfraser

	* convert/Makefile: only clean after all tests (csvtests need stuff
	  from openofficetests)

2004-04-23 16:28  davidfraser

	* convert/convert.py: added method to pass certain command-line
	  options through to convertmethod as parameters

2004-04-23 15:26  davidfraser

	* convert/Makefile: made test-csv2po use standard oo templates
	  rather than af (which were .po not .pot)

2004-04-23 15:24  davidfraser

	* convert/: convert.py, csv2po.py, dtd2po.py, moz2po, oo2po.py,
	  po2csv.py, po2dtd.py, po2moz, po2oo.py, po2prop.py, poreplace.py,
	  prop2po.py: removed convertmethod option from runconversion
	  (since this was a special case for single input and output,  and
	  we can determine it from the filenames or guess) added
	  removeduplicates call to oo2po

2004-04-22 12:50  davidfraser

	* convert/TODO: added TODO to handle originals in xpis

2004-04-20 11:51  davidfraser

	* convert/moz2po: added switches to only include localization files
	  from xpi - thus avoiding unneccessary commonprefix

2004-04-20 11:48  davidfraser

	* storage/xpi.py: added method islocfile, argument includenonloc
	  code to allow only browsing localizable files (and only counting
	  them for commonprefix) added methods jarfileexists, ospathexists

2004-04-20 11:36  davidfraser

	* convert/moz2po: only check if template is a file if it is filled
	  in (could be None)

2004-04-18 22:46  davidfraser

	* convert/oo2po.py: added kludge to get --pot into blankmsgstr
	  (real fix is to pass options like we do in filters)

2004-04-18 22:38  davidfraser

	* convert/po2oo.py: return True to show output is successful

2004-04-16 18:25  davidfraser

	* convert/TODO: have done unpacking xpi added TODO to remove need
	  for -R switch

2004-04-16 16:23  davidfraser

	* tools/detectencoding: updated to be able to handle multiple words
	  having the same fuzzyword (in which case they are ignored) use a
	  dictionary as dictword to handle this also output script in order
	  of count decreasing, and show count

2004-04-16 15:43  davidfraser

	* tools/detectencoding: factored out updatecharmap, writescript

2004-04-16 15:32  davidfraser

	* tools/detectencoding: added option to generate a script that will
	  do the changes found by fuzzymatch...

2004-04-16 15:31  davidfraser

	* convert/poreplace.py: added poreplace script as basis for tools
	  to replace stuff inside po files

2004-04-16 15:25  davidfraser

	* convert/convert.py: added check for self.usetemplates...

2004-04-16 15:13  davidfraser

	* convert/convert.py: replaced calls to get functions with calls to
	  open functions added TODO

2004-04-16 14:58  davidfraser

	* tools/detectencoding: tell the user if they haven't requested any
	  action...

2004-04-16 14:55  davidfraser

	* tools/detectencoding: don't store options that we can just use
	  straight from self.options moved filename init from __init__ to
	  recursefiles only print filename if verbose added lots of
	  docstrings changed names of functions (especially handle...) to
	  make it clearer

2004-04-16 14:47  davidfraser

	* tools/detectencoding: added option for ignorecase (so we don't do
	  lower unless ignorecase is true)

2004-04-16 14:43  davidfraser

	* tools/detectencoding: added code to fuzzymatch to count
	  correspondence of chars, print out results

2004-04-16 14:29  davidfraser

	* tools/detectencoding: fixed mistake in countmaps...  factored out
	  findwords from testwordstats fixed decodedwords being undecoded
	  in fuzzymatch simplified printout of fuzzymatch (only one
	  encoding)

2004-04-16 14:22  davidfraser

	* tools/detectencoding: split fuzzymatch off from testwordstats,
	  made it a different test fixed some bugs (decodedwords was
	  actually translationwords!) made fuzzymatch use only one encoding
	  added docstring for testcharstats

2004-04-16 14:07  davidfraser

	* tools/detectencoding: factored out makecountmap method add
	  docstring for fuzzy

2004-04-16 14:03  davidfraser

	* tools/detectencoding: renamed getcountmap to updatecountmap

2004-04-16 13:34  davidfraser

	* tools/detectencoding: improved fuzzy matching (number of chars of
	  non-std chars doesn't have to match) added unique and verbose
	  options

2004-04-16 13:20  davidfraser

	* tools/detectencoding: moved listencodings, options into detector
	  class changed testencodings to testcharstats added testwordstats,
	  also handles fuzzy word matching added options to select tests
	  added limitencodings option

2004-04-15 18:07  davidfraser

	* convert/convert.py: tried to replace old
	  getinput/output/templatefile methods with
	  openinput/output/templatefile (not tested!)

2004-04-15 18:02  davidfraser

	* convert/: Makefile, moz2po: added initial support for xpi
	  templates still need to support different filename structure
	  moved initialization of options.inputxpi

2004-04-15 17:40  davidfraser

	* convert/: Makefile, moz2po: removed -x switch from moz2po -
	  automatically detect xpi file / dir

2004-04-15 17:34  davidfraser

	* storage/xpi.py: added actual xpi filename into name of
	  inputstream

2004-04-15 17:29  davidfraser

	* convert/: convert.py, moz2po: added code to convert to handle
	  temporary output files using StringIO now moz2po.convertfile is
	  not neccessary...

2004-04-15 17:14  davidfraser

	* convert/: moz2po, convert.py: changed recursefiles to just yield
	  list of inputpaths instead of output, templates, ext etc moved
	  generation of output names, template names, etc to
	  recurseconversion added methods openinputfile, openoutputfile,
	  opentemplatefile to open the files...  changed getconvertmethod
	  to take inputpath, outputpath instead of extensions improved
	  logic of gettemplatename (detect if not using templates here, not
	  outside) made moz2po simpler by overriding openinputfile also
	  don't need to checksubdir for every subdir in moz2po, just let
	  convert handle it

2004-04-15 16:46  davidfraser

	* storage/xpi.py: added clever trickery so streams can have names
	  like normal files (so for example a converted po file will
	  contain the 'name' of the .dtd file from inside the xpi)

2004-04-15 16:22  davidfraser

	* convert/Makefile: added test for moz2po from xpi

2004-04-15 16:20  davidfraser

	* convert/: convert.py, moz2po: added methods
	  getfullinput/output/templatepath so they can be overridden in
	  derived classes (and overrode getinputpath in moz2po for xpi
	  files) this makes recurseconversion much simpler, so it doesn't
	  need to be overridden in moz2po improved directory creation
	  scheme (create a directory if we're going to create a file that
	  needs it)

2004-04-15 10:13  davidfraser

	* storage/xpi.py: fixed bug with giving reduce an initial value -
	  limits the result thus commonprefix wasn't working...

2004-04-15 09:32  davidfraser

	* convert/moz2po: made non-xpi recursion return (otherwise it does
	  the standard thing, then tries the xpi thing too)

2004-04-15 09:15  davidfraser

	* convert/Makefile: added help to Makefile

2004-04-10 09:47  davidfraser

	* convert/moz2po: fixed wrong reference to base class added sys
	  import for warning output

2004-04-10 09:18  davidfraser

	* storage/xpi.py: gave initial value to reduce to prevent error on
	  empty list in commonprefix

2004-04-08 15:36  davidfraser

	* convert/moz2po: added initial code to handle reading files
	  straight out of an xpi

2004-04-08 15:32  davidfraser

	* convert/convert.py: initprogressbar needs to return allfiles as
	  sometimes it converts it from a generator to a list...

2004-04-08 15:04  davidfraser

	* storage/xpi.py: added openinputstream method for getting a
	  file-like input stream from a file (inside the xpi or an inner
	  jar) added includedirs parameter to iterextractnames

2004-04-08 14:32  davidfraser

	* storage/xpi.py: added functions jartoospath and ostojarpath that
	  handle finding files inside jars

2004-04-08 13:56  davidfraser

	* convert/convert.py: refactored recurseconversion - was too
	  complex and difficult to override added methods initprogressbar
	  and convertfile

2004-04-08 11:12  davidfraser

	* storage/xpi.py: modified _commonprefix to handle strings as well
	  as lists use it to simplify jarprefixes (strip leading
	  languagename-)

2004-04-08 11:04  davidfraser

	* storage/xpi.py: a lot of refactoring extracted _commonprefix
	  method added a XpiFile constructor that reads out the important
	  information cache jarfiles in self.jarfiles so they aren't
	  extracted repeatedly added stripcommonprefix, findjarprefixes
	  methods added ziptoospath, ostozippath methods this all
	  simplifies iterextractnames a lot

2004-04-08 10:12  davidfraser

	* storage/xpi.py: added xpi module

2004-04-06 13:53  davidfraser

	* tools/detectencoding: added tool to detect encoding of files
	  (currently po files)

2004-04-03 18:11  davidfraser

	* storage/po.py: fixed wrong variable names

2004-03-31 09:13  davidfraser

	* filters/: checks.py, decoration.py: added checks for numbers

2004-03-31 09:00  davidfraser

	* filters/checks.py: separated quoting into singlequoting and
	  doublequoting removed unneccessary calls to
	  filterwordswithpunctuation prefilter

2004-03-31 08:56  davidfraser

	* filters/prefilters.py: added code to detect any apostrophe in the
	  middle of a word as not being punctuation

2004-03-31 08:42  davidfraser

	* convert/po2csv.py: added ' to list of values to be escaped at
	  start of string (spreadsheet cell)...

2004-03-31 08:29  davidfraser

	* ChangeLog: added proper changelog for 0.6 (try keep this up to
	  date :-))

2004-03-30 18:20  davidfraser

	* filters/prefilters.py: added TODO to fix up punctuation check

2004-03-30 18:19  davidfraser

	* ChangeLog: witty change log

2004-03-30 18:15  davidfraser

	* __version__.py: version 0.6

2004-03-30 18:11  davidfraser

	* filters/prefilters.py: added more common words with
	  punctuation...

2004-03-30 18:10  davidfraser

	* filters/pofilter: updated pofilter to handle plurals in po

2004-03-30 18:07  davidfraser

	* filters/filtercmd.py: show progress whether successful or not
	  (not usually just means a blank file, we are still
	  progressing...)

2004-03-30 18:04  davidfraser

	* tools/pomerge: added po merge tool

2004-03-30 16:22  davidfraser

	* storage/po.py: renamed hasplurals to hasplural improved creation
	  of index (always create entry in msgidindex, makes sourceindex
	  simpler)

2004-03-30 15:45  davidfraser

	* convert/csv2po.py: added code to handle duplicate source strings
	  so they don't fool us...

2004-03-30 14:55  davidfraser

	* filters/pogrep: added grep tool for po files

2004-03-30 14:55  davidfraser

	* convert/csv2po.py: added handling for plural forms

2004-03-30 14:45  davidfraser

	* convert/po2csv.py: added handling for msgid_plural refactored so
	  convertstring is used generally

2004-03-30 14:28  davidfraser

	* storage/po.py: refactored stuff so we don't calculate lengths all
	  over the place.  This also handles plurals in msgstr

2004-03-30 14:10  davidfraser

	* storage/po.py: added ability to handle msgid_plural and msgstr[n]
	  refactored each part's construction into getmsgpartstr

2004-03-30 12:22  davidfraser

	* filters/checks.py: gave filters shorter names to make them easier
	  on the command line

2004-03-30 12:00  davidfraser

	* convert/convert.py: added code to handle outputing to the input
	  or template file without overwriting them (use temp file)

2004-03-30 11:30  davidfraser

	* filters/: checks.py, decoration.py: rearranged checkss -added
	  whitespace (and associated decoration functions) and separated
	  startandend

2004-03-30 11:28  davidfraser

	* filters/pofilter: refactored the getfilterdocs approach

2004-03-30 11:21  davidfraser

	* filters/pofilter: updated to show filter documentation as well
	  when listing filters

2004-03-30 10:46  davidfraser

	* storage/csvl10n.py: don't need to join lines with a linebreak
	  since they already have one...

2004-03-30 10:39  davidfraser

	* convert/csv2po.py: removed doencode (what was it there for?)

2004-03-30 10:29  davidfraser

	* convert/csv2po.py: moved header testing out of template-merging
	  code to make it apply to all conversions

2004-03-30 10:17  davidfraser

	* filters/: checks.py, pofilter: added gnome checking option

2004-03-30 10:16  davidfraser

	* convert/convert.py: made templates pot files if output is po
	  (needs cleanup)

2004-03-30 10:14  davidfraser

	* convert/csv2po.py: merged csv2po and repo into one class so we
	  can sort out related issues together...

2004-03-29 21:59  davidfraser

	* filters/pofilter: addoption to list all filters instead of
	  actually running them

2004-03-29 16:28  davidfraser

	* storage/po.py: added option to check if msgstr is blank

2004-03-23 14:03  davidfraser

	* convert/convert.py: added ability to use templates in
	  non-recursive case...

2004-03-13 20:57  dwaynebailey

	* filters/TODO: Updated TODO items

2004-03-12 18:20  davidfraser

	* filters/TODO: added TODO file...

2004-03-12 18:20  davidfraser

	* __version__.py: version 0.5

2004-03-12 18:15  davidfraser

	* filters/pofilter: .msg.d10442

2004-03-12 17:49  davidfraser

	* filters/filtercmd.py: added ability to pass options through to
	  filter command by specifying option keywords...

2004-03-12 17:49  davidfraser

	* filters/pofilter: added ability to specify filterobject used new
	  ability to pass options into filter command to allow
	  openoffice/mozilla checker, handle includereview etc

2004-03-12 17:32  davidfraser

	* convert/convert.py: added TODO about refactoring to share common
	  code with filters.filtercmd limited progress options to available
	  choices

2004-03-12 17:32  davidfraser

	* filters/pofilter: modified to use new run_filters method of
	  checks added TODO about handling options fixed filter. to
	  filtercmd.  renamed input to inputarg to avoid pychecker warning

2004-03-12 17:30  davidfraser

	* filters/filtercmd.py: made progress options limited to the
	  availablae choices

2004-03-12 17:27  davidfraser

	* filters/checks.py: .msg.bm9152

2004-03-12 17:11  davidfraser

	* filters/pofilter: renamed filter to filtercmd removed unused
	  options...

2004-03-12 17:09  davidfraser

	* filters/: filter.py, filtercmd.py: renamed filter to filtercmd
	  since filter is a builtin function

2004-03-12 17:01  davidfraser

	* filters/pofilter: added pofilter tool which curently uses checks
	  to filter po files

2004-03-12 16:58  davidfraser

	* filters/filter.py: added filter as base class for filter tools

2004-03-12 16:55  davidfraser

	* convert/: moz2po, po2moz: removed unneccessary imports...

2004-03-12 16:51  davidfraser

	* storage/po.py: forgot to remove po. when moving makeheader into
	  po

2004-03-12 16:44  davidfraser

	* convert/csv2po.py: added a TODO to merge the two classes defined
	  here also added a redundant return to avoid a pychecker error...

2004-03-12 16:36  davidfraser

	* convert/dtd2po.py: moved po header creation into storage.po (all
	  the other cvs comments say convert/dtdpo.py because I messed up
	  the command line)

2004-03-12 16:35  davidfraser

	* convert/oo2po.py, convert/prop2po.py, storage/po.py:
	  convert/dtd2po.py

2004-03-12 16:34  davidfraser

	* convert/po2csv.py: removed unused modules

2004-03-12 16:24  davidfraser

	* convert/csv2po.py: moved the counts about matching strings so
	  they don't get called added in a TODO to display them in verbose
	  mode

2004-03-12 16:17  davidfraser

	* filters/.cvsignore: added .cvsignore for filters

2004-03-12 16:14  davidfraser

	* misc/sparse.py: .msg.cR7134

2004-03-12 16:12  davidfraser

	* misc/quote.py: changed from cp1250 to iso-8859-1 and added FIXME
	  to avoid things like doencode...

2004-03-12 16:08  davidfraser

	* convert/po2csv.py: handle blank po elements (don't produce a
	  blank csv line)

2004-03-12 16:00  davidfraser

	* convert/Makefile: fixed csv2po to use appropriate templates...

2004-03-12 15:57  davidfraser

	* convert/: convert.py, csv2po.py, oo2po.py, po2csv.py, po2oo.py:
	  updated to make convertmethods work...  only show filename if
	  successful...  improved handling of header in csv2po

2004-03-12 15:45  davidfraser

	* convert/csv2po.py: fixed to use standard Convert class, make
	  templates like input imported sparse option converted extract. to
	  quote. (from old code)

2004-03-12 15:38  davidfraser

	* convert/csv2po.py: changed csv2po from defaultrecursion to
	  optionalrecursion

2004-03-12 15:36  davidfraser

	* convert/Makefile: allow the progress option to be set by an
	  environment variable

2004-03-12 15:34  davidfraser

	* convert/oo2po.py: indicate if outputpo is empty (so it can be
	  removed by convertor)

2004-03-12 15:31  davidfraser

	* convert/csv2po.py: added in the repo class (previously csv2po2)
	  that allows conversion using a .po template converted to use
	  convert.ConvertOptionParser methods...

2004-03-12 15:15  davidfraser

	* convert/po2csv.py: converted totally to
	  convert.ConvertOptionParser system

2004-03-12 15:12  davidfraser

	* convert/Makefile: added better system of categorization now you
	  can test-mozilla, test-openoffice, test-csv, or clean- each of
	  them also added csv tests...

2004-03-12 15:10  davidfraser

	* convert/convert.py: updated formathelp to handle format
	  dictionaries...

2004-03-12 15:01  davidfraser

	* convert/: oo2po.py, po2dtd.py, po2prop.py: removed unneccessary
	  imports...

2004-03-12 14:30  davidfraser

	* convert/: oo2po.py, po2oo.py: converted to use new
	  ConvertOptionParser runconversion system

2004-03-12 14:25  davidfraser

	* convert/: dtd2po.py, moz2po, prop2po.py: moved convertdtd to
	  dtd2po and convertprop to prop2po (updated existing methods)
	  converted main methods in dtd2po and prop2po to use convert

2004-03-12 14:17  davidfraser

	* convert/: moz2po, dtd2po.py, po2dtd.py, po2moz, po2prop.py,
	  prop2po.py: updated Mozilla command lines to use new
	  ConvertOptionParserExt (this gives the .dtd.po instead of simple
	  .po handling capabilities) changed old --pot options to new
	  usepots took out silly comments

2004-03-12 14:12  davidfraser

	* convert/convert.py: split off the code that combines extensions
	  (e.g. .dtd.pot) into a subclass, do a simpler thing in
	  ConvertOptionParser improved template format intelligence (allow
	  user to override whether template is like input or output)

2004-03-12 13:20  davidfraser

	* convert/convert.py: improved the logic for detecting
	  input/outpformats to be based on dict/list rather than
	  single/multiple (this is to help po2dtd.py and po2prop.py) also
	  added a TODO to improve it further...

2004-03-12 13:10  davidfraser

	* convert/: po2dtd.py, po2moz, po2prop.py: moved convertdtd to
	  po2dtd and convertprop to po2prop (updated existing methods)
	  converted main methods in po2dtd and po2prop to use convert

2004-03-12 12:32  davidfraser

	* convert/Makefile: added makefile that runs tests...

2004-03-12 12:30  davidfraser

	* convert/convert.py: added a none option for progresstype

2004-03-12 12:28  davidfraser

	* convert/po2oo.py: fixed reference to optparse (the rest of this
	  needs to be updated though...)

2004-03-12 11:34  davidfraser

	* misc/progressbar.py: added an invisible progress bar...

2004-03-12 11:10  davidfraser

	* filters/prefilters.py: removed unused variable (what was it for?)

2004-03-12 08:16  davidfraser

	* convert/convert.py: strip off the . before the inputext (like we
	  do with the outputext)

2004-03-11 07:22  davidfraser

	* misc/: quote.py, setup.py: renaming variables for pychecker
	  updated _cvs version in setup

2004-03-11 06:32  davidfraser

	* storage/: po.py, properties.py: renamed/removed variables to
	  remove pychecker warnings...

2004-03-11 06:29  davidfraser

	* convert/convert.py: fixed errors picked up py pychecker (and
	  Caio!)

2004-03-10 18:56  davidfraser

	* filters/: checks.py, prefilters.py: refactored so all the helper
	  functions are in TranslationChecker (and automatically
	  ignored...) also made accelerators and varmatch parameters so
	  they don't have to be defined in prefilters...  moved the
	  definitions for OpenOffice and Mozilla into classes in checks
	  removed unneeded stuff from prefilter

2004-03-10 18:38  davidfraser

	* filters/helpers.py: added default argument to reduce calls so if
	  list is empty, no error is produced...

2004-03-10 18:03  davidfraser

	* filters/: checks.py, prefilters.py: moved all the checks in
	  checks into a class adjusted the wrapping of prefilters to work
	  in a more readable fashion...  fixed unneccessary parameter in
	  prefilters

2004-03-10 16:36  davidfraser

	* filters/: __init__.py, checks.py, decoration.py, helpers.py,
	  prefilters.py: added initial versions of filtering code...

2004-03-08 18:50  davidfraser

	* convert/convert.py: adapted to support using .pot files instead
	  of .po files adapted to handle multiple input formats, one output
	  format fixed prunesubdirs...

2004-03-02 17:16  davidfraser

	* convert/po2csv.py: temporarily added import optparse to handle
	  errors added header columns to csv

2004-03-02 16:57  davidfraser

	* convert/po2moz: converted to use convert module for recursion,
	  option handling made convert functions return 1 so that they are
	  registered as successful...  took out unneccessary code,
	  rearranged rest...

2004-03-02 13:52  davidfraser

	* convert/convert.py: added support for verbose progress output...

2004-03-02 13:52  davidfraser

	* misc/progressbar.py: added Simple, Verbose progress bars...
	  added verbosemessage option

2004-03-02 13:43  davidfraser

	* convert/convert.py: refactored recursion.  added support for
	  progress indicators added support for multiple output formats
	  instead of input formats

2004-03-02 12:44  davidfraser

	* misc/progressbar.py: added progress bar classes...

2004-03-02 11:49  davidfraser

	* convert/convert.py: reverted patch to only use single
	  outputformat (po2moz needs multiple)...  still need to make it
	  work out extension in that case...  changed name from
	  options.recursion to options.recursive

2004-03-01 18:47  dwaynebailey

	* .cvsignore, convert/.cvsignore, misc/.cvsignore,
	  storage/.cvsignore: Add .cvsignore files everywhere

2004-02-27 17:33  davidfraser

	* storage/po.py: escape escapes in getunquotedstr

2004-02-27 17:09  davidfraser

	* convert/: convert.py, moz2po: moved recursion and handling of
	  options into convert module (fixed mistaken earlier using of
	  self. for options.) changed from supporting multiple
	  outputformats to only supporting one...

2004-02-27 16:51  davidfraser

	* convert/convert.py: refactored convert to be more intelligent and
	  modular...  started adding functions to actually run the
	  conversion...

2004-02-27 16:07  davidfraser

	* convert/: convert.py, dtd2po.py, moz2po, oo2po.py, po2csv.py,
	  po2moz, po2oo.py, po2prop.py, prop2po.py: converted all tools to
	  use new convert.ConvertOptionsParser also changed from new type
	  to standard class, added default parameter to constructor

2004-02-27 15:23  davidfraser

	* convert/: convert.py, moz2po: added a new convert module to
	  incorporate common elements of convert tools - option
	  construction and parsing (done) - will also have recursion logic,
	  etc...

2004-02-27 14:26  davidfraser

	* convert/csv2po.py, storage/csvl10n.py: made storage.csvl10n
	  handle construction from inputfile startedc converting csv2po to
	  standard options

2004-02-27 14:21  davidfraser

	* convert/: csv2po.py, oo2po.py, po2csv.py: added csv2po from old
	  version

2004-02-27 13:06  davidfraser

	* convert/po2csv.py: converted to new command-line options system

2004-02-27 13:01  davidfraser

	* convert/po2csv.py: added po2csv from old version...

2004-02-24 19:12  davidfraser

	* misc/setup.py: made the csv setup script usable by other setup
	  scripts

2004-02-24 17:34  davidfraser

	* convert/: dtd2po.py, moz2po, oo2po.py, po2dtd.py, po2moz,
	  po2oo.py, po2prop.py, prop2po.py: added --version options

2004-02-24 17:26  davidfraser

	* __version__.py: added version file

2004-02-24 14:16  davidfraser

	* convert/oo2po.py: changed variable names that shadow builtin
	  variables

2004-02-24 14:15  davidfraser

	* convert/oo2po.py: made inputformat and outputformat local
	  variables/parameters rather than globals

2004-02-24 14:11  davidfraser

	* storage/dtd.py: added comments...

2004-02-24 14:10  davidfraser

	* convert/: TODO, moz2po, prop2po.py: added full template support
	  for properties files in moz2po fixed wrong variable name in
	  prop2po improved comments...

2004-02-24 14:07  davidfraser

	* storage/properties.py: added a propfile.makeindex method cleaned
	  up comments

2004-02-24 14:05  davidfraser

	* convert/prop2po.py: added mergefiles method, use it to convert
	  template + inputfile...

2004-02-24 13:42  davidfraser

	* convert/dtd2po.py: added both original and translated dtd
	  filename into header when merging files...  improved comments to
	  reflect template usage

2004-02-24 13:31  davidfraser

	* convert/: moz2po, prop2po.py: started adding support for
	  templates to prop2po started rearranging moz2po based on new
	  system (storage.properties etc)

2004-02-24 13:30  davidfraser

	* storage/po.py: improved logic of pofile.isblank() so that if it
	  has extra blank elements it still is blank

2004-02-24 13:15  davidfraser

	* convert/TODO: done the translate.storage.properties class

2004-02-24 13:13  davidfraser

	* storage/po.py: rearranged handling of blank msgid... to not
	  include sourcecomments etc also altered merging to not merge
	  blank msgids

2004-02-24 13:03  davidfraser

	* convert/prop2po.py: improved handling of comments (generic now
	  instead of just header comments)...  prevents blank propelements
	  from being discarded...

2004-02-24 12:16  davidfraser

	* storage/properties.py: added code to handle blank properties
	  elements (i.e. just comments followed by a blank line)

2004-02-24 12:13  davidfraser

	* convert/prop2po.py: did better handling of headers (merge
	  comments in at the start) stripped msgids...

2004-02-24 11:18  davidfraser

	* convert/dtd2po.py, storage/dtd.py: added code to pick up the
	  input file name and put it in the header...

2004-02-24 11:16  davidfraser

	* convert/prop2po.py: converted to use poelements when generating
	  the po file that way we don't have to regenerate it...

2004-02-24 10:59  davidfraser

	* convert/TODO: added need to convert existing properties files to
	  translated .po

2004-02-24 10:51  davidfraser

	* convert/prop2po.py: converted to use new storage.properties
	  module added TODOs for rest of conversion...

2004-02-24 10:41  davidfraser

	* storage/properties.py: added storage.properties module for
	  handling properties files...

2004-02-24 10:40  davidfraser

	* storage/po.py: improved comments, took out unneccessary TODOs

2004-02-20 17:30  davidfraser

	* convert/dtd2po.py: added template capabilities to command line...

2004-02-20 17:23  davidfraser

	* convert/moz2po: added the ability to use template directories
	  (produce a .po that represents a translation)

2004-02-20 17:21  davidfraser

	* convert/dtd2po.py: added code to merge two dtd files (original
	  and translated) removed leftover code

2004-02-20 17:08  davidfraser

	* convert/dtd2po.py: refactored convertfile into findmixedentities,
	  convertdtdelement, convertfile made findmixedentities construct a
	  dictionary rather than a list, indicate success with the values
	  this is a much cleaner approach ...  the refactoring should help
	  with merging dtd files of translations into the originals to
	  produce .po files

2004-02-20 16:32  davidfraser

	* convert/dtd2po.py: refactored creating the po header...

2004-02-20 16:17  dwaynebailey

	* convert/moz2po: made properties files conversions always succeed
	  (previously they weren't returning anything)

2004-02-20 14:47  davidfraser

	* storage/po.py: added code to handle empty lines added
	  pofile.isempty to check if a file contains no definitions (at
	  most a header)...

2004-02-20 14:44  davidfraser

	* convert/: TODO, moz2po: removed empty directories and .pot files
	  added -P|--pot to usage

2004-02-20 14:41  davidfraser

	* convert/TODO: added TODO to not create empty directories...

2004-02-20 12:19  davidfraser

	* convert/: TODO, prop2po.py: handled duplicates in prop2po with a
	  kludge because it is already a kludge added TODOs to indicate
	  that...

2004-02-20 11:59  davidfraser

	* convert/dtd2po.py: added code to remove duplicates...

2004-02-20 11:53  davidfraser

	* convert/moz2po: made a switch, --pot or -P which produces .pot
	  extensions

2004-02-20 11:42  davidfraser

	* convert/oo2po.py: made it produce .pot files if -P is given

2004-02-20 11:32  davidfraser

	* __init__.py, convert/__init__.py, convert/dtd2po.py,
	  convert/moz2po, convert/oo2po.py, convert/po2dtd.py,
	  convert/po2moz, convert/po2oo.py, convert/po2prop.py,
	  convert/prop2po.py, misc/__init__.py, misc/quote.py,
	  misc/setup.py, storage/__init__.py, storage/csvl10n.py,
	  storage/dtd.py, storage/oo.py, storage/po.py: changed all
	  #!/usr/bin/python2.2 headers to #!/usr/bin/env python

2004-02-17 15:50  davidfraser

	* convert/TODO: sorted out extension handling...

2004-02-17 15:36  davidfraser

	* convert/po2oo.py: adjusted po2oo.py to cater for plain .po files,
	  not .oo.po files

2004-02-17 15:21  davidfraser

	* storage/dtd.py: rearranged code to prevent entities inside
	  comments from being seen...  (delete the comment part once we've
	  parsed it...)

2004-02-17 12:35  davidfraser

	* convert/oo2po.py, convert/po2oo.py, storage/oo.py: added methods
	  to normalize unexpected characters in OO keys

2004-02-13 13:23  davidfraser

	* storage/po.py: added note on todict function...

2004-02-10 15:23  davidfraser

	* convert/: oo2po.py, po2oo.py: improved method of converting
	  OpenOffice key tuples into po location strings this prevents
	  errors with gettext tools like msguniq also added some TODOs
	  about future improvements that are required...

2004-02-06 12:33  davidfraser

	* misc/quote.py: added ability to escape escapes when escaping
	  quotes (otherwise you can't unescape them back...)

2004-02-06 12:32  davidfraser

	* convert/: dtd2po.py, prop2po.py: po headers should be fuzzy, for
	  templates the charset should not be set also escapes need to be
	  escaped when converting .properties files to .po files

2004-01-28 13:07  davidfraser

	* convert/TODO: need to handle duplicates in moz2pot and oo2pot
	  (merge #: id/source)

2004-01-26 12:27  davidfraser

	* convert/po2oo.py: added code to renumber the language code

2004-01-26 09:20  davidfraser

	* convert/: oo2po.py, po2oo.py: added openoffice <-> gettext
	  converters

2004-01-26 09:13  davidfraser

	* convert/TODO: added TODO about extensions done openoffice
	  conversion (about to add...)

2004-01-26 09:12  davidfraser

	* convert/dtd2po.py: corrected doc string

2004-01-20 17:50  davidfraser

	* convert/: TODO, moz2po: added TODO file

2004-01-20 17:18  davidfraser

	* convert/po2prop.py: fixed escaping (needs to know escape
	  character even though it isn't included in the new string)
	  changed to show proper optparse error if no template file
	  given...

2004-01-20 14:39  davidfraser

	* convert/dtd2po.py: took out obsolete docstring

2004-01-20 14:37  davidfraser

	* convert/moz2po: added moz2po script to convert mozilla trees to
	  po files

2004-01-20 14:37  davidfraser

	* convert/po2moz: fixed silly doc string

2004-01-20 14:25  davidfraser

	* storage/: dtd.py, oo.py, po.py: fixed warnings from pychecker -
	  builtin variable names, unused variables, etc

2004-01-20 14:20  davidfraser

	* convert/po2moz: added po2moz script to convert a whole tree from
	  .po to mozilla-style (including .dtd and .properties files

2004-01-20 14:10  davidfraser

	* convert/: dtd2po.py, po2dtd.py, po2prop.py, prop2po.py: fixed
	  error - templatefile instead of self.templatefile fixed help
	  strings for outputfile fixed warnings from pychecker - builtins
	  used as variables

2004-01-20 12:28  davidfraser

	* convert/po2dtd.py: added recursive option to process directory
	  trees...

2004-01-16 11:56  davidfraser

	* storage/po.py: remember the filename that this pofile object
	  comes from...

2003-12-23 15:19  davidfraser

	* COPYING, ChangeLog, README, __init__.py, convert/README,
	  convert/__init__.py, convert/dtd2po.py, convert/po2dtd.py,
	  convert/po2prop.py, convert/prop2po.py, misc/csv.py,
	  storage/__init__.py, storage/csvl10n.py, storage/dtd.py,
	  storage/oo.py, storage/po.py, misc/README, misc/__init__.py,
	  misc/_csv.c, misc/optparse.py, misc/quote.py, misc/setup.py,
	  misc/textwrap.py: Initial revision

2003-12-23 15:19  davidfraser

	* COPYING, ChangeLog, README, __init__.py, convert/README,
	  convert/__init__.py, convert/dtd2po.py, convert/po2dtd.py,
	  convert/po2prop.py, convert/prop2po.py, misc/csv.py,
	  storage/__init__.py, storage/csvl10n.py, storage/dtd.py,
	  storage/oo.py, storage/po.py, misc/README, misc/__init__.py,
	  misc/_csv.c, misc/optparse.py, misc/quote.py, misc/setup.py,
	  misc/textwrap.py: imported a restructured, cleaner, nicer version
	  of the l10ntools.mozdev.org scripts

