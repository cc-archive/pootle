Easy:
+ UnitCollection -> TranslationStore
+ collection -> store
+ language to the bottom layer (above UnitCollection)
+ folders
+ TranslationStore.translate
+ Document storage semantics.
+ Add a language store.
- Define merger interface.
- Implement a naive merger.
- Implement a merger using external 'msgmerge'.

Important:
+ preliminary .po parser
+ preliminary readonly layer over Pootle's storage
+ demo XML-RPC server
- thorough definition of TranslationUnit + parser
- read/write layer over Pootle's storage
- Pootle's metadata (special files) support in storage layer
- complete .po parser
- .po serializer

Long term:
- consider use of SQLObject for RDB storage
- Import language info from Pootle config.

Debian-specific:
- Add a script to import debconf translations
- Hook up DDTP

Other subsystems to consider:
- Security model (important!)
- Merging mechanism
- Pootle-like "goals"
- Versioning, "dirty" state
- Language information DB (language name, plural equations, etc.)
- Translation compendium
