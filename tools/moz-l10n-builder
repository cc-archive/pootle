#!/bin/bash
#
# Copyright 2005 Zuza Software Foundation
#
# This file is part of The Translate Toolkit.
#
# The Translate Toolkit is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# translate is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with translate; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# moz-l10n-builder - takes a set of PO files, migrates them to a Mozilla build
# and creates XPIs and Windows .exe files.

# Prerequisites:
# nsis installer
# wine - to run the nsis installer
# translate toolkit - together with the bash scripts pomigrate2 and friends
# l10n.mk patch - patch to enable some make functionality needed in existing makefiles
# Checout of Mozilla and l10n/ sources with mozilla/client.mk checked out to the correct branch or releaes tag
# Firefox and/or Thunderbird Windows .exe - an existing en-US build that we will unwrap and remake with your translations. In this case you probably want to be building on a RELEASE not BRANCH tag.

lang=$*
langs="af en_ZA nr nso ss st tn ts ve xh zu"

if [ $# -lt 1 ]; then
	echo "Usage: `basename $0` <language|ALL>"
	exit
fi

# Get latest files from CVS
(cd mozilla; cvs up client.mk; make -f client.mk l10n-checkout)
# Make latest POT file
rm -rf l10n/en-US
(cd mozilla; make -f tools/l10n/l10n.mk pot-create)

function copyfile {
	filename=$1
	language=$2
	directory=$(dirname $filename)
	if [ -f l10n/en-US/$filename ]; then
		mkdir -p l10n/$language/$directory
		cp -p l10n/en-US/$filename l10n/$language/$directory
	fi
}

function copyfiletype {
	filetype=$1
	language=$2
	files=$(cd l10n/en-US; find . -name "$filetype")
	for file in $files
	do
		copyfile $file $language
	done
}

function copydir {
	dir=$1
	language=$2
	files=$(cd l10n/en-US/$dir; find . -type f | egrep -v CVS)
	for file in $files
	do
		copyfile $dir/$file $language
	done
}

if [ "$lang" != "ALL" ]; then
	langs=$lang
fi

for lang in $langs
do
	echo "Language: $lang"
	buildlang=$(echo $lang | sed "s/_/-/g")

	# Get the lastest po files
	( cd po; svn up $lang)
	
	# Migrate language from current PO to latest POT
	mkdir -p po-updated
	cp -rp po/.svn po-updated
	rm -rf po-updated/$lang
	cp -rp po/$lang po-updated
	rm -f `find po-updated/$lang -name "*.po"`
	
	# Protect the real original PO dir
	temp_po=`mktemp -d tmp.XXXXXXXXXX`
	cp -rp po/$lang/* $temp_po
	
	##### Hacks - pre po2moz ########
	# Fix the fact that various editor files are in the wrong place
	if [ "$lang" == "zu" -o "$lang" == "xh" ]; then
		rm -rf $temp_po/editor/ui
		mkdir -p $temp_po/editor/ui
		mv $temp_po/editor/chrome $temp_po/editor/ui
	fi

	# Fix for languages that have no Windows codepage
	if [ "$lang" == "ve" ]; then
		cp -p po/en-ZA/browser/installer/*.properties $temp_po/browser/installer/
	fi

	~/download/translate/src/tools/pomigrate2 --use-compendium --quiet --pot2po $temp_po po-updated/$lang l10n/pot
	rm -f `find po-updated/$lang -name "*.xhtml.po" -o -name "*.html.po"`
	
	
	# Recreate l10n related files - delete existing in case they are no longer present
	rm -rf `find l10n/$buildlang -name "*.properties" -o -name "*.dtd"`
	po2moz --errorlevel=traceback --exclude=".svn" -t l10n/en-US po-updated/$lang l10n/$buildlang
	
	##### Hacks - post po2moz ########
	# Hack to fix creating Thunderbird instaler
	if [ -f po-updated/$lang/mail/installer/installer.inc.po ]; then
		cp po-updated/$lang/mail/installer/installer.inc.po /tmp/installer.$lang.properties.po
		cp l10n/en-US/mail/installer/installer.inc /tmp/installer.properties
		po2prop  --progress=none --errorlevel=traceback -t /tmp/installer.properties /tmp/installer.$lang.properties.po /tmp/installer.$lang.properties
		mv /tmp/installer.$lang.properties l10n/$buildlang/mail/installer/installer.inc
	fi

	# Copy and update non-translatable files
	copyfiletype "*.xhtml" $buildlang
	copyfiletype "*.html" $buildlang
	copyfiletype "*.rdf" $buildlang
	copyfile browser/README.txt $buildlang
	copyfile browser/extra-jar.mn $buildlang
	copyfile browser/firefox-l10n.js $buildlang
	copyfile browser/microsummary-generators/list.txt $buildlang
	copyfile browser/os2/README.txt $buildlang
	copyfile browser/profile/chrome/userChrome-example.css $buildlang
	copyfile browser/profile/chrome/userContent-example.css $buildlang
	#copydir browser/searchplugins $buildlang # Only need the list.txt file
	copyfile browser/searchplugins/list.txt $buildlang
	copyfile extensions/reporter/chrome/reporterOverlay.properties $buildlang
	copyfile mail/README.txt $buildlang
	copyfile mail/all-l10n.js $buildlang
	copyfile mail/os2/README.txt $buildlang
	copyfile toolkit/chrome/global/intl.css $buildlang
	#copyfile toolkit/installer/windows/charset.mk $buildlang

	# Clean up where we made real tabs \t
	sed -i "/^USAGE_MSG/s/\\\t/\t/g" l10n/$buildlang/toolkit/installer/unix/install.it
	sed -i "/^#define MSG_USAGE/s/\\\t/\t/g" l10n/$buildlang/browser/installer/installer.inc

	# Fix bookmark file to point to the locale
	sed -i "s/en-US/$buildlang/g" l10n/$buildlang/browser/profile/bookmarks.html

	# Create a diff files for checking
	(cd l10n; cvs diff $buildlang > ../diff/$lang-l10n.diff)
	(cd po-updated/$lang; svn diff > ../../diff/$lang-po.diff)
	
	# Cleanup
	rm -rf $temp_po
	
	# Build Firefox XPI and installer
	( cd mozilla/browser/locales; make langpack-$buildlang MOZ_BRANDING_DIRECTORY=other-licenses/branding/firefox LANGPACK_FILE='$(_ABS_DIST)'"/install/Firefox-Languagepack-"'$(MOZ_APP_VERSION).$(AB_CD)'".xpi" )
	( cd mozilla/browser/locales; make repackage-win32-installer-$buildlang MOZ_BRANDING_DIRECTORY=other-licenses/branding/firefox WIN32_INSTALLER_IN=../../../Firefox-Setup-2.0.exe WIN32_INSTALLER_OUT='$(_ABS_DIST)'"/install/sea/Firefox-Setup-"'$(MOZ_APP_VERSION).$(AB_CD)'".exe" )

	# Build Thunderbird XPI and installer
#        ( cd mozilla/mail/locales; make langpack-$buildlang MOZ_BRANDING_DIRECTORY=other-licenses/branding/thunderbird LANGPACK_FILE='$(_ABS_DIST)'"/install/Thunderbird-Languagepack-"'$(MOZ_APP_VERSION).$(AB_CD)'".xpi" )
#        ( cd mozilla/mail/locales; make repackage-win32-installer-$buildlang MOZ_BRANDING_DIRECTORY=other-licenses/branding/thunderbird WIN32_INSTALLER_IN=../../../Thunderbird-Setup-2.0.exe WIN32_INSTALLER_OUT='$(_ABS_DIST)'"/install/sea/Thunderbird-Setup-"'$(MOZ_APP_VERSION).$(AB_CD)'".exe" )

done
