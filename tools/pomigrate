#!/bin/bash

# This tool takes and existing directory of PO based translations and migrates
# them based on a set of PO Template files.
#
# If a compendium or compendium files are provided then they will be used to
# perform rough translations during the migration.
#
# TODO: -i initialise all files that are in POT but not PO dir
# TODO: -d delete all files that are in PO but not POT ie old and retired
# TODO: handle conflicts where one file has moved to two places - msgcat the
# old ones and place a copy in each place.

function usage () {
	if [ $# -lt 2 ]; then
		echo "Usage: `basename $0` [options] po_directory pot_directory [compendium(s)]"
		echo
		echo "Options:"
		echo "  -c - create and use an uncleaned compendium based on PO files in the po_directory"
		exit 1
	fi
}

# Handle options
case $1 in
	-c) option_create_compendium=1
		shift
		;;
	-*) usage
		;;
esac

# Get and check PO and POT dir
po_dir=$1
pot_dir=$2
if [ ! -d "$po_dir" -o ! -d "$pot_dir" ]; then
	usage
fi

# Get the compendium files
shift 2
if [ "$1" != "" ]; then
	for file in $*
	do
		compendium=" $compendium --compendium=$file "
	done
fi

# Create a compendium if needed
if [ $option_create_compendium == 1 ]; then
	echo "Creating: compendium file from PO directory..."
	temp_compendium=`mktemp`
	msgcat -o $temp_compendium `find $po_dir -name "*.po"`
	compendium=" --compendium=$temp_compendium $compendium "
fi

# Ready to process files
for po_file in `cd $po_dir; find . -name "*.po"`
do
	if [ ! -f $pot_dir/${po_file}t ]; then
		echo "No POT file exists for $po_file"
	else
		echo -n "$po_file "
		msgmerge --update $compendium $po_dir/$po_file $pot_dir/${po_file}t
	fi
done

# Cleanup
rm -f $temp_compendium
